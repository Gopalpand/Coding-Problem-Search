/
for
start
5,
n
given
using
delete
the
⌊x⌋
size
a
0-based
4,
=
largest
is
to
from
return
⌊n
3,
linked
equal
integer
less
1,
node
node,
x.
are
where
than
0,
middle
and
2,
you
list
modified
of
indexing,
respectively.
denotes
nodes
or
head
list.
2⌋th
at
value.
after
change
moves.
move,
array
minimum
three
between
nums
any
moves
difference
an
performing
smallest
nums.
can
element
it
choose
most
in
value
one
number
which
frog
have
print
if
frogs,
is,
valid
multiple
'a',
time,
that
mixed.
five
all
printing
croak.
different
not
represents
'o',
same
croakoffrogs,
means
croaking
letters
-1.
croak
finish
"croak"
sequentially.
combination
'r',
'k'
'c',
string
so
string.
frogs
croaks
roots
"other",
let's
we
separated
some
call
longer
successor.
length.
consisting
form
"an"
new
-
word
words
english,
it.
be
many
forming
more
has
with
shortest
replaced
followed
other
root,
dictionary
by
example,
when
successor
root
successors
"another".
replacement.
called
this
sentence
concept
another
spaces,
replace
left
right
duplicate
make
remove
until
such
choosing
removals
on
consists
guaranteed
can.
k,
repeatedly
concatenate
k
adjacent
them,
answer
together.
causing
side
unique.
no
duplicates
substring
removal
been
removing
s
deleted
made.
ii
final
0-indexed
since
assigned
pair
rooted
parent[0]
connected,
1.
character
represented
i.
0
numbered
parent
parent[i]
length
them.
graph
s[i]
also
tree
undirected
(i.e.
longest
cycles)
n,
characters
path
==
nine,
subtract
numeral,
usually
xii,
+
convert
900.
written
ones
making
symbols:
x,
(5)
symbol
as
just
i,
400
c
x
40
before
applies
because
l,
placed
principle
1000
12
(100)
xxvii,
500
iv.
xx
50
there
m
four.
four
(500)
i
2
six
integer.
100
27
4
ii.
subtraction
instead,
(10)
roman
numerals
9.
two
however,
10
numeral
m.
used:
(50)
5
added
simply
iiii.
c,
right.
90.
seven
(1000)
d
ix.
l
instances
1
v,
v
num.
rearrange
minimized
num
note
does
digits.
minimal
leading
contain
rearranged
digits
zeros.
rearranging
its
sign
twice
every
true
contains
appears
distinct.
false
array,
least
nums,
strings,
each
your
impossible
s2
task
"y"
swap
belong
s2[j].
"x"
means:
equal,
-1
swaps
other.
strings
required
only.
do
s1[i]
s1
these
so.
"ace"
order
generated
text1
original
common
without
subsequence
relative
0.
strings.
"abcde".
both
their
text2,
remaining
subsequence,
(can
characters.
changing
subsequence.
none)
possible
cover
strange
colors
rectangular
requirements:
grid.
matrix
turn,
targetgrid,
once
above
cannot
following
operation,
again.
special
up
rectangle.
(row,
false.
single
will
existing
solid
pattern
color
printer
col)
used
otherwise,
position
targetgrid[row][col]
sweltering
buy
spend,
day,
ith
note:
boy
costs[i]
costs
cream
possible.
summer
wants
price
initially
he
bars
coins
maximum
problem
ice
bar
bars.
must
order.
sort.
store,
counting
solve
coins.
node.
first
connected
elements
starting
goes
binary
downwards.
downward
correspond
context
starts
otherwise
pieces
teacher
restart
class
chalk
student
solve,
chalk[i]
process,
chalk[i],
give
they
index
strictly
students
pieces.
current
asked
chalk.
find
then
k.
reaches
use
that,
problem.
arrays
sorted
nums1
complexity
o(log
median
arrays.
nums2
respectively,
run
(m+n)).
time
should
overall
"06".
'z'
'f'
mapping:
mapping
->
"6"
(1
6)
"2"
"kjf"
"11106"
grouping
encoded
message,
cases
'b'
containing
ways
reverse
only
"aajf"
grouped
decode
"06"
into:
11
"26"
mapped
fits
"1"
06)
into
a-z
32-bit
ways).
numbers
invalid
(there
digits,
message
(11
test
...
may
back
'a'
rotate
modify
representing
allocate
in-place,
2d
directly.
input
90
(clockwise).
rotation.
image,
image
degrees
desired
match
bijection
permutation
word.
p(x),
exists
map
pattern,
replacing
get
maps
matches
letter,
p
recall
letters:
words[i]
letter
letter.
pattern.
end
ticket
tickets,
(0-indexed)
1)th
tickets[i].
line.
ticket.
taken
tickets
leave
needed
buying
go
person
like
instantaneously)
front
(which
tickets.
people
exactly
0th
would
queuing
line
second
happens
buy,
takes
(n
(time[i]
<
%
60
divisible
duration
durations
songs
seconds
time[i]
60.
seconds.
want
indices
song
j
time[j])
pairs
formally,
total
operation
uppercase
times.
character.
replacement
repeating
operations.
perform
english
might
1-9
s2,
sequence
consecutive
encode
"cdefghijklmn",
(possibly
"o",
becomes
check
(inclusive),
numeric
third
arbitrarily
"abcdefghijklmnop"
exceed
(as
split
["ab",
steps:
string).
could
lengths,
"ab121p".
lowercase
string:
"1",
letters,
string,
3.
"p"].
sequence,
sequence:
"12",
s2.
non-empty
be:
way
substrings.
itself.
add
significant
except
non-negative
digit
digit.
lists
assume
zero,
integers.
sum
comes
area
need
0's)
isleaf
terminator
solving
val
answer.
val].
isleaf:
children
structure
val:
quad-tree,
boolean
isleaf;
notice
represent
grid
tree.
proper
shown
format:
(i.e
signifies
two-dimensional
children.
understand
quad-tree
don't
val;
stop.
*
read
false,
bottomright;
about
0's.
besides,
wiki.
level
very
traversal,
attributes:
}
1's
quad
topleft;
accepted
val]
quad-tree.
sub-grids
recurse
sub-grid.
output
divide
below.
here.
data
format
public
section
null
leaf
serialization
internal
photo.
know
0's
serialized
topright;
set
[isleaf,
similar
values,
refer
bottomleft;
{
construct
assign
duplicates)
t
(including
testcases
included
window.
lengths
"".
window
empty
substring,
stacked
heighti
heighti]
cuboid's
height
[widthi,
dimensions
cuboid
widthi
widthj
put
(0-indexed).
lengthj
<=
them
lengthi
rotating
cuboids[i]
place
cuboid.
cuboids.
heightj.
subset
cuboids
lengthi,
stacking
s.
.
palindrome
partition
s,
partitioning
➝
operations
17
first,
alphabet
"zbax"
262124
(i.e.,
6
convert:
"262124"
26).
then,
8
above.
resulting
7
operations:
total.
times
transform
repeat
described
"(26)(2)(1)(24)"
...,
#1:
#2:
matrix.
indices,
indices[i]
cells
values
indices[i],
ri.
ci.
increment
odd-valued
ci]
row
column
applying
m,
location
initialized
following:
indices.
odd
locations
[ri,
startgene
endgene
mutations
assumed
genetic
investigate
defined
bank.
records
valid,
gene
mutation,
long
changed
't'.
suppose
-->
bank,
mutations.
"aaccggta"
choices
endgene.
'g',
mutation.
8-character
bank
mutate
mutation
"aaccggtt"
point
jth
minsizej,
queries
abs(id
[preferredj,
[roomidi,
absolute
hotel
minsizej].
query
rooms
answer[j]
closest
room,
rooms.
difference,
id
that:
rooms[i]
tie
roomidi
abs(x)
query.
preferredj)
sizei.
id.
minimized,
queries[j]
room
sizei]
sql
+-------------+---------+
city
name,
present
city,
lastname
schema
information
name
|
tables
address
addressid
example.
names.
instead.
firstname
table:
table
last
type
primary
persons
write
combine
int
personid.
result
personid
key
state
varchar
table,
report
table.
determine
whether
much
others
array.
element,
otherwise.
product
well
nums1.length
nums1[i]
(1-based)
nums2.length.
kth
nums2[j]
vertical
(row
tree,
0).
(0,
orderings
rightmost
case,
sort
calculate
positions
top-to-bottom
ending
col),
leftmost
col
traversal
values.
column.
1)
up,
water.
down).
flooded
bottom
right,
matrix,
columns
integers
walk
1-based
cells[i]
water
top
cells,
travel
cross
cell
cardinal
coordinates)
rows
cells.
day
1).
covered
row.
rith
(1-based
directions
land
still
land.
(left,
cith
walking
entire
indicates
(student,
enrolled.
classes
students.
courses
class)
square
either
component
color.
col,
coloring
directions.
component,
boundary
4-directionally
row,
column).
squares
location.
grid,
(the
next
grid[row][col]
border
109
within
7.
too
substrings
contiguous
homogenous
same.
large,
count
modulo
quality
api.
developed
one,
latest
bad.
version
bad
team
api
n]
manager
returns
versions
version.
previous
develop
version,
minimize
implement
product.
calls
check.
based
bool
causes
function
currently
isbadversion(version)
out
[1,
fails
unfortunately,
words,
sqrt.
num,
built-in
perfect
function,
positive
library
(i,
0-indexed).
(rows
mat[i][j]
mat,
mat.
j)
numzeros,
contains:
items
1s
numones,
numnegones,
item
0s
among
numones
numzeroes
items.
available
items,
pick
numnegones
-1s
bag
arr.
allowed
arr
subarrays
steps.
reversing
subarray
step,
select
target
but
cost,
discount
candy,
gives
chosen
shop
free
candies.
away
buys
candies
free.
free,
selling
discount.
customer
sold,
cost[i]
4.
take
cost
bought.
candy
small
page's
sequence.
area,
how
page
so,
design
area.
now
w]
page,
web
width
job
>=
developer
page’s
larger
designed
satisfy
[l,
size.
w.
whose
needs
w
specific
rectangle
sets
share
segment
endpoints.
segments.
points.
1-d
endpoints
points,
segments
huge,
plane,
points
(from
n-1)
integral
covers
non-overlapping
draw
coordinates.
forward,
involving
steps
seq
loop
game
negative,
located
backwards
forward
nums[i]
1]
movement
>
where:
seq[1]
seq[k
negative.
circular,
cycle
i:
non-zero
element.
moving
results
positive,
rules
move
seq[0]
playing
puts
nums[seq[j]]
backward.
circular
forward/backward
occurrence
white
'b',
black,
denote
block.
'w'
blocks[i]
blocks.
recolors
recolor
block
black
blocks
stock.
achieve
day.
sell
profit,
maximize
prices[i]
transaction.
stock
best
prices
future
profit
greatest
three.
occurs
number.
decimal
maximized.
3x.
distinct
powers
y
power
nums2.
separate
way.
(in
even
lines.
straight
intersect
connecting
uncrossed
lines
line).
given)
lines:
nums2[j],
horizontal
(non-horizontal)
targetsum.
references.
targetsum,
returned
root-to-leaf
equals
paths
target,
o(log(m
complexity.
solution
search
properties:
non-decreasing
n))
greater
diagonal
diagonals
nums[i][nums.length
lies
divisors
nums[i][i]
diagram,
[3,5,7].
diagonals,
prime
val.
[1,5,9]
root.right.val)
value,
sub-nodes,
min(root.left.val,
node's
always
exists,
root.val
sub-nodes.
zero
holds.
nodes'
made
property
whole
smaller
sub-node.
[starti,
endi],
intervals
non-overlapping.
rest
intervals[i]
keyword
align
fallout
outer
direction,
direction
video
players
spelling.
engraved
key[i].
ring"
"12:00"
initially,
ring's
freedom
dial
rotation
place,
finished
pressing
press
spell
metal
step.
key[i]:
spell,
begin
button.
freedom"
code
center
reach
stage).
"freedom
spelled,
trail
quest
purpose
door.
counts
clockwise
(next
stage
direction.
anticlockwise
keyword.
button
aligned
pressing,
"road
requires
open
ring
key[i]
say
super-palindrome
super
super-palindromes
right].
[left,
palindrome.
inclusive
palindromes
palindrome,
range
1st
take.
lastdayi]
days
[durationi,
schedule
indicate
durationi
n.
iii
simultaneously.
continuously
courses[i]
lastdayi.
online
course
our
attacks!
duration.
attack.
1].
attacking
during
timeseries,
reset,
teemo
attack
hero
enemy
interval
poisoned.
again
ashe,
attacks
effect
ends,
gets
timeseries[i],
poisoned
timeseries[i]
poison
ashe
timer
[t,
mean
[starttime1,
events.
endtime1]
intersection
event1
hh:mm.
event2,
events).
event
conflict
hours
endtime2].
events
[starttime2,
moment
event2
24
happened
together
round,
"13"
step
"346"
3
group
group,
completed.
rounds
round
merge
13.
completed
groups
on.
contents.
space-delimited
(except
ordering.
logs.
identifier)
come
logs
logs:
identifier.
letters.
log
letter-logs:
digit-logs.
same,
lexicographically
types
contents
files
reorder
letter-logs
digit-logs
consist
maintain
digit-logs:
identifiers.
null.
2016.
policyholder's
latitude
policyholder
attribute
places.
lat
tiv_2015
holder's
investments
unique).
float
tiv_2016,
2015
investment
2016
insurance
policyholders
(lat,
longitude
policyholders,
lon)
policy
it's
who:
city.
tiv_2016
+-------------+-------+
lon
pid
tablenumberi
entries
customernamei
sit
orders.
restaurant
part
table”.
table”
alphabetical
restaurant.
customers
restaurant's
“display
display
orders
done
specifically
fooditemi
“table”,
at,
orders[i]=[customernamei,tablenumberi,fooditemi]
numerically
names
header
orders,
additionally,
customer,
ordered.
food
increasing
painted
bursting
balloons,
indexed
balloon,
balloons
treat
burst
bounds
nums[i
collect
balloon
balloons.
wisely.
checkout(int
station
checkin(int
system
t.
traveled
card
another.
happen
checks
average
checkout
t)
stationname
meaning
startstation,
called.
directly,
railway
stations.
endstation)
keeping
class:
consistent.
chronological
underground
id,
getaveragetime
time.
stationname,
getaveragetime(string
track
computed
double
traveling
endstation.
checkin
t1
void
t2.
startstation
t2,
endstation
checked
undergroundsystem
startstation.
methods
good
1's.
base
k)
j,
under
if:
rules:
teams
n).
rating[j]
(0
soldier
rating[j],
(soldiers
rating[k]).
unique
amongst
conditions.
teams).
standing
rating[k])
(rating[i],
soldiers
rating
(rating[i]
indirect
employee
importance
subordinates'
subordinates
employees[i].subordinates
subordinates.
employees[i].id
employee.
including
direct
ids.
employees
information,
ids
employee's
employees[i].importance
percent0.
brackets
10-5
percenti.
earned
brackets[i]
money
upper1
brackets.length).
pay
tax
rate
upper0
accepted.
income
follows:
[upperi,
paid
taxed
percent1.
calculated
bound
percent2.
percenti]
answers
actual
upper
upperi
bracket
upperi-1
dollars
upper2
amount
taxes.
earned.
taxes
available,
nth
randomly.
will:
his
passenger
board
randomly
occupied
airplane
seats
assignment
passengers
seat.
picks
lost
probability
seats.
own
seat
maxi
queries[i].
answer[i]
[mini,
maxi]:
mini
exist,
money,
denoting
everyone
according
aforementioned
rules.
to.
receives
dollars.
dollar.
dollars)
nobody
who
distribute
distributed.
receive
algorithm.
growing
(red)
iteration,
inserted
there.
partially
iteration.
inserts
insertion
repeats
removed
singly
(black)
sort,
list,
belongs
removes
repetition
example
data,
in-place
head.
finds
consuming
list's
remain.
graphical
iterates,
algorithm:
subsequences.
increasing.
[ki,
lower
digit,
trimi
queries[i],
smaller.
considered
keep
trimi].
kith
queries[i]
to:
trimmed
queries,
reset
trim
query,
'*'
[lefti,
"*||**|".
"||**||**|*",
plates
'|'
substring.
candle
8]
plate
candle.
s[lefti...righti]
[3,
righti]
only,
(inclusive).
candles
arranged
surrounded
log(m))
log(n))
o(m
top,
bottom.
peak
neighbors
o(n
perimeter
cell.
[i,j].
left,
runs
mat
algorithm
[3,2,1]
inserting
(bst)
going
[2,1,3],
bst
[2,3,1]
identical
formed
yields
constructed
bst.
child.
child,
being
differing
possible:
lead
parts
parts.
occurring
later.
one.
earlier
permutations.
permutations
integers,
ascending
large
obtain
wikipedia:
lca
(where
lowest
(lca)
allow
q
itself).”
ancestor
descendant
“the
definition
descendants
(bst),
nums[j]
2k
representation
nums[j].
beautiful
bit
can:
nums.length.
i]
len(arr)
arr,
arr[2
doubled
encrypter(char[]
decrypted
decryption.
dictionary.
decrypt
permitted
carried
dictionary)
keys,
values[i]
encrypt(string
decrypt(string
word1
word1)
keys[i]
appear
case
returned.
encrypted
encrypter
keys
out,
encrypts
word2
2.
word2)
string[]
initializes
""
keys.
satisfying
process:
encrypt
process
encryption
waiting
river,
river.
warehouse,
minutes.
boxes
regulate
waits
crossing
bridge.
righttoleftj
righttolefti
pickoldi,
warehouse)
boxes,
old
workers
crosses
first.
efficient
while
[lefttorighti,
warehouse
condition
:
bridge
lefttorightj
through
warehouse.
lefttorighti
bridge,
putnewi
box
efficiency
worker
side,
putnewi].
instance
met:
warehouses
remains
righttolefti,
(old
river
(new
pickoldi
destination
target.
nummoves),
(starting
nummoves)
nummoves
destination.
infinite
passengers[j]
buses
bus.
buses[i]
capacity
bus
either:
arrive
passenger.
minutes
arrives,
earliest
necessarily
sorted.
full.
bus,
fewer
wait
formally
departure
departs
catch
arrival
capacity,
score
selected
increase
score:
order,
lo,
(lo
(3
become
fit
hi)
16
signed
hi
[lo,
hi]
basket
sells
price[i]
store
basket.
tastiness
baskets
top-right
overlap,
axis-aligned
(x2,
edges
overlap.
rectangles
rec1
y2],
[x1,
y1)
(x1,
y-axis.
corner.
touch
parallel
rec2,
x2,
x-axis,
clear,
overlap
coordinate
positive.
bottom-left
y1,
y2)
corner,
corner
west,
meters
north,
east,
changes
itself
0)
self
distance.
not.
distance[3]
distance[0]
counter-clockwise.
x-y
distance[1]
south,
distance[2]
street.
distance
houses[i]
houses
mailboxes
street
along
mailbox.
nearest
house
sum,
(alice's
difference.
play
stones
stops
alice's
goal
stones[i]
turns
bob's
optimally.
bob
score).
alice
score.
stones'
stone,
player's
viii
stone
game,
earning
managers
employee,
manager.
managerid
earn
salary,
salary
managers.
row).
confuse
trues
(multiple
confusion
writing
addition,
't's
answerkey,
question.
't'
questions
operation:
answerkey[i]
'f's
true/false
question
exam
falses
questions,
'f').
maximizing
rounded
down
percentage
percent.
unlock
'3',
slots:
'6',
'7',
'9'.
stop
'5',
unable
turn
displays
wheels
'8',
'0000',
'0'
'9'
around:
wheel
slot.
'0',
wrap
lock,
freely
impossible.
'2',
deadends
'1',
'4',
lock
dead
wheels.
turning
codes,
times:
floor(piles[i]
piles[i]
pile
apply
pile,
floor(x)
piles,
once.
2)
onto
push(int
freqstack
frequent
freqstack()
val)
stack.
pushes
stack's
pop()
pop
stack-like
stack
constructs
frequency
push
duplicates.
finding
concatenation
132
even.
arbitrary
3-digit
requirements.
follow
3],
312
were
nums[0]
nums[1]
nums[2
way:
partitions.
preserve
bi)
b2),
sum.
(a2,
(an,
min(ai,
b1),
(a1,
2n
bn)
maximized
triangle
t[i]|
corresponding
ascii
budget
t,
maxcost.
characters).
|s[i]
q,
identical,
trees
structurally
i.e.,
varying
type.
let
quantities,
distributed
stores.
distribution,
possible,
retail
products
indicating
store.
amounts,
stores
specialty
quantities[i]
highest
numsright.
n)
divided
empty.
division
numsright
empty)
divisions
numsright:
empty,
numsleft
rolls.
abs(i
roll,
divisor
rolls
6-sided
different.
fair
sequences
dice
valued
satisfied:
gap
roll
conditions
non-increasing
maximum()
due
incorrect.
nature
worse,
update(int
updates
fluctuation
stockprice
timestamp,
stockprice()
later
market,
record
object
recorded.
timestamp
records.
particular
record.
price)
volatile
unfortunately
current()
timestamp.
correcting
minimum()
stream
wrong
beauty
negative
xth
sliding
size,
(both
y[i]
order)
strings:
x[i]
n-1.
break
vice-versa.
run.
('start',
several
+----------------+---------+
user
website.
'end'
processing_time,
activity_type
processes
activity
running
ends
processes.
per
'start'
enum
pair.
machine_id
shows
machine
minus
process_id)
'end').
website
complete
factory
machine.
activity_type)
process_id
process_id,
machines
process.
activities
(machine_id,
machine_id.
representation.
arr[j].
arr[i]
once,
lonely
coordinates
boundary,
spiral
spaces
southeast
cols
whenever
visited
grid's
visit
eventually,
outside
east.
cstart)
shape
continue
(but
later.).
(rstart,
facing
northwest
(index
jump
[i
inclusive.
vi
get.
boundaries
k)]
min(n
comprises
then:
answer[row][col]
rank
elements.
rank(p)
rank(q)
compared
column,
matrix[row][col].
+--------------+---------+
prefix.
patient_id,
patient_id
patients
diabetes.
patient_name
hospital.
diabetes
'conditions'
diab1
spaces.
swapping
mentioned
consecutive,
prefix
non-empty,
vertically
diagonally
pass
yi].
points[i]
visiting
horizontally
visits.
second).
unit,
units
[xi,
unit
sqrt(2)
second,
department
reports
reports.
null,
department,
themself.
averages
(integer
division)
mismatch
duplicated
set,
error,
status
originally
missing
got
error.
loss
beginning
1-indexed).
node2.
to,
adds
edge)
directed
edgecosti]
edgecost].
addedge(int[]
graph(int
edges.
shortestpath(int
path.
edges)
adding
weighted
[from,
int[][]
toi
fromi
edgecosti.
node2)
edges[i]
node1,
calculator
toi,
[fromi,
node1
edge
"happy
'd',
regular
message.
substitution
substituted
secret
26
(actual
appearance
boy"
'o'
alphabet.
('h'
'p'
'
decoded
transformed
partial
alphabet),
'e',
'y'
cipher
themselves.
vi.
edge,
labeled
ui
vertex
vi]
vertices,
bi-directional
graph.
edges,
[ui,
way,
!=
colored
ensure
nodes.
blue.
node.)
(either
true.
red,
uncolored
player.
chooses
(and
if)
turn.
winner
(red
neighbor
blue
win
player
odd,
candies)
gift).
person,
(of
person.
giving
(not
us
num_people
distribution
candies,
end)
(with
y.
recursively
s1,
scramble
scrambled
length,
random
index,
decide
system.
obtained
input.
jumbled
shuffled
mapping[i]
notes:
rule
become:
a[n-2]].
decrease
a[2],
a[n-1]]
[4,5,6,7,0,1,4]
a[0],
rotated
a[1],
[0,1,4,4,5,6,7]
duplicates,
[a[0],
was
[a[n-1],
balanced.
quantity
obtain.
'r'
'l'
those
balanced
nums[right]).
numarray
nums[left
nums[index]
nums[left]
handle
mutable
update
types:
sumrange(int
right)
numarray(int[]
nums)
low
low_fats
('y',
product_id
'n')
recyclable
'n'
fat
recyclable.
define
sum(nums[0]…nums[i]).
1d
runningsum[i]
ordered
never
customerid
+-------------+------+
customer.
anything.
foreign
patches
required.
add/patch
patching
10].
passed
shouldn't
rand10().
please
implemented
testing.
language's
rand7()
uniform
7],
generates
argument
rand10()
rand7(),
(simulating
len)
cursor.position
currenttext.length
addtext(string
min(10,
remain
deletetext(int
cursorleft(int
key).
beyond
text)
texteditor()
is.
moved
deletes
cursor
texteditor
len
text,
cursorright(int
appends
deleted.
editor
text
cursor.
deleting
actually
text.
backspace
cursor,
graph,
exists.
vertices
toi]
toi.
acyclic
reachable.
n-1,
work
regardless
what
tell
lose
pick.
picked
guarantee
higher
number,
guessing.
game.
lower,
guessing
guess
minstack
retrieving
minstack()
min
function.
object.
top()
getmin()
retrieves
pop,
o(1)
constant
supports
push,
"34".
34".
"
"123",
non-digit
"34",
zeros
34
"a123bc34d8ef34"
representations
space:
space.
123
"8",
xor
maximumbit.
nums[nums.length-1]
answer,
2maximumbit
disturbing
"aec"
"abcde"
subsequences
procedure:
into,
resultant
procedure.
concatenating
composition
group.
partitioned
fill,
remaining,
exists)
fill
(if
mat[3][1],
topmost
reaching
bottom-right
mat[2][0],
mat[4][2].
includes
matrix's
end.
partition.
[4,4,4]
elements,
conditions:
satisfies
[1,3,5]
[3,4,5]
[2,2]
subarrays.
good,
good.
n].
top)
moment,
"push":
build
answers,
"pop":
if,
answer[0]
loseri
defeated
loseri]
played
consider
losses
answer[1]
matches[i]
match.
outcome.
[winneri,
matches.
winneri
class.
lot
big,
fixed
else
kinds
cartype.
park
parking
small,
parkingsystem(int
lot.
small)
constructor.
medium,
cartype
space
car
addcar(int
parkingsystem
slots
spaces:
kinds:
cartype)
piles[i].
assuming
piles
continues
across
wins
turns,
wins.
ties.
objective
optimally,
stones.
')',
parentheses
']',
correct
closed
close
'{',
valid.
'['
'}',
'(',
brackets.
[1,0,0].
flipping
invert
image.
[0,1,1]
horizontally,
inverting
[0,1,1].
reversed.
[1,1,0]
flip
it,
reduce
modifies
negabinary
bit.
[1,1,0,1]
arr2
(-2)^0
zeros:
1s,
(-2)^2
arr1
(-2)^3
arr[0]
-3.
[0]
-2,
"hello",
world
sentences
"hello"
sentence2
hello
similarity
sentence2.
insert
jane"
my
"hello
trailing
world"
similar.
"jane"
"my
world",
is"
equal.
sentence1
sentences.
sentence2,
inside
[1,0,9,2,1].
separating
10921,
separation
triples.
bitwise-and
triple
nums.length
nums[k]
&
bitwise
operator.
triples
arithmetic
derived
print("third");
imply
second()
second().
mainly
comprehensiveness.
first()
b
print("first");
system,
thread
program
threads
tests'
foo
first(),
see
though
seem
second(),
third().
scheduled
print("second");
threads.
operating
executed
third()
mechanism
around
maxlocal[i][j]
maxlocal
generate
local
centered
there).
box.
(empty
floor,
cell).
walk.
trying
'#'
floor
storekeeper
wall,
'.'
down,
(impossible
push.
locations.
wall
obstacle
's'
"bababcba".
times,
repeated
"bba"
"bababcba",
"bbabba",
tasked
found,
preparing
effort
(rows-1,
effort.
heights
hiker
route's
upcoming
heights,
hike.
situated
wish
cell,
columns-1)
top-left
col).
0),
heights[row][col]
route
route.
columns,
hope
ancestors
(dag).
unidirectional
via
u
there?
"magic
contiguous).
filled
square"
(each
subgrid
magic
9
subgrids
roads
zeros,
0-9
tokens:
token
tokens
"a
legs"
"4"
s).
words.
"puppy"
puppy
sentence,
eyes
drop
east
car's
west).
trip
numpassengersi
off
fromi,
pooling
trips
initial
trips[i]
drives
vehicle
trips,
[numpassengersi,
kilometers
drive
violating
planted,
flowerbed
1's,
no-adjacent-flowers
flowers
planted
plots.
plots
farmer
examples
bottommost
barren
i).
h
i)
pyramid.
(represented
fertile
r).
h.
(r
c)
r)
criteria:
r
inverse
found
covers.
apex
(r,
fertile.
(i
pyramids
barren.
plot
pyramidal
farmland,
pyramid
pyramid,
pyramidal)
year
"friday",
date,
month
{"sunday",
"thursday",
week
"tuesday",
date.
"saturday"}.
"monday",
"wednesday",
differs
endword,
wordlist.
transformation
ladder
wordlist,
sk
si
wordlist
[beginword,
beginword
endword
sk].
senator's
vote
party
'd'
procedure
round-based
"radiant"
senators
skipped
right:
victory
rights:
party.
radiant
strategy
dota2,
smart
rounds.
ban
parties.
voting
announce
parties:
senators,
finally
victory:
party,
senator
belonging.
rights
dire
dire.
dota2
predict
coming
"dire".
enough
senate
exercise
voting.
relations
courses.
prevcoursei
relations[i]
relationship
prerequisite
taking.
also,
semesters
nextcoursei],
semester,
prerequisites
nextcoursei:
course.
nextcoursei.
[prevcoursei,
-k
integer,
hash
maximal
and.
children's
non-leaf
evaluate
i.e.
evaluating
evaluations.
evaluation
full
bottom-up
root).
non-null
verify
encounter
"9,3,4,#,#,1,#,#,2,#,6,#,#",
serialize
reconstruct
preorder,
comma-separated
preorder
sentinel
"1,,3".
commas,
'#'.
pointer.
traversal.
randpoint
x_center,
radius
circle,
circumference
y_center).
solution(double
(x_center,
radius,
y].
y_center)
circle
randpoint()
circle.
[x,
cost[i].
doing
leaving
7,
trivially
3)
non-equal
(6,
-3,
5]
successive
zero.
alternate
contrast,
-7,
differences
9,
sequences.
wiggle
zero)
('a'
wonderful,
'j'),
"ab"
ten
wonderful
"ccjjc"
word,
"abab"
separately.
edit
word:
word2,
word2.
monotone
"mm-dd",
arrivealice
arrivealice,
spent
rome
leavealice,
dates
arrivebob
calendar
leap
31,
30,
31].
as:
year.
year,
28,
leavealice
5-character
business
leavebob
meetings.
occur
[31,
arrivebob,
leavebob.
'i'
1],
[0,
di
perm
perm,
perm[i]
perm[i
triplets
nums[k],
unequal
nums[i],
pairwise
meet
nums[k].
nums[j],
[1,2,3,4]
makes
arr[2]
[5,6,7,4],
nums2[i].
[1,2,3,8],
arr[arr.length
[5,6,7,8].
arr[1]
2].
perm[n
perm.
create
reinitialize
intersection.
nums2,
nums1.
denoted
flowers.
(i+1)th
plant
yi.
garden
paths[i]
gardens,
yi]
choice
garden.
bidirectional
describes
gardens
xi
path,
garden,
flower
planting
uses
form.
extra
linear
nums[n
pivot
unchanged.
nums[pivot]
nums[pivot
min(nums[i],
j.
nums[j])
subarray.
nums[i+1],
(j
n!
factorial
zeroes
n!.
triplet
pref.
pref
b's
a's
integers:
[1,2,3,1,2]
tweetcounts()
certain
frequencies:
starttime,
(86400-second
hour,
seconds)
list<integer>
freq
endtime]
help
seconds).
[10,3609],
tweetcounts
periods
chunk
period
tweet
site
[130,189],
(3600-second
tweets
recordtweet(string
[3610,7209],
tweetname,
minute,
"hour",
[10,69],
day).
gettweetcountsperfrequency(string
frequency's
analysis.
[70,129],
freq,
[9970,10000]
recorded
minute
time)
hour
analyzing
company
media
(10000
social
[10,10000]
10000]
[starttime,
chunks):
"day"
(60-second
(every
tweetname
chunks
freq.
example).
endtime)
shorter
[7210,10000]
specified
"minute",
[10,
monitor
numbers,
lucky
numexchange,
drink.
numexchange
bottles
drinking
bottle.
bottle
exchange
numbottles
market
one)
streamchecker
'x',
["abc",
streamchecker(string[]
detect
query(char
forms
(one
suffix
'y',
letter)
"xyz"
'z',
accepts
"axyz"
"xyz"]
words)
"abcabc".
notice:
b,
"abc"
"",
simultaneously
transactions
engage
again).
achieve.
iv
transactions:
reversed
a,
c.
ugly
contaminated,
contaminated
treenode.right.val
treenode.left.val
find(int
findelements
root)
recovered
treenode.val
target)
treenode.left
treenode.right
recovers
findelements(treenode*
+---------------+---------+
stocks
had
'sell'
gain/loss
gain
capital
operation_day
operation_day)
('sell',
stock_name
(stock_name,
price.
'buy'
'buy')
four-person
exceptional
[3,8]
reserved,
cinema
[3,3]
reservedseats
occupies
reservedseats[i]
adjacent,
[3,4])
labelled
side.
middle,
figure
(such
already
allocation
aisle
seats,
reserved.
board,
puzzle
solved,
tiles
solved
[[1,2,3],[4,5,0]].
solved.
lexicographical
dictionary,
result,
covered.
colscount
organised
colscount)
6,
traversing
20,
15]
11,
top.
continues,
!==
method
12,
arrows
16,
transforms
alternating
known
snail
8,
iterating
10,
bottom,
17,
[19,
rowscount
nums.length,
corresponds
enhances
13,
18,
snail(rowscount,
14,
invalid.
uni-valued,
uni-valued
univalued
components.
ai
delete,
bi]
component.
splitting
components
bi
[ai,
lengths.
entirely
duplicates),
distinct)
comprised
concatenated
necesssarily
(without
sell.
sale
buy.
offers,
want,
shopping
offer.
item,
offers
want.
special[i][n]
special[i][j]
optimal
given,
special[i]
needs[i]
offer
leetcode
array)
offers.
building
requests[i]
reside
full,
season,
in.
transfer
transfers
net
requests.
employees.
achievable
building,
buildings
request
requests
dividing
contains.
128
self-dividing
pieces[i].
pieces,
formation
tested,
slowest
keyspressed
tester
presses
released.
releasetimes[i]
keypresses.
exact
keyspressed[i]
testing
releasetimes[i
keypad
releasetimes,
newly
pressed
keypress
releasetimes[0].
keypresses,
test,
0-indexed.
subsequent
[starttime[i],
endtime[i]]
lays
querytime
starttime
endtime[i].
started
starttime[i]
homework
querytime.
endtime
(non-empty)
'i',
('a',
vowel
'u')
vowels
subtrees
subtree
reminder,
constraints:
plus
key.
trees.
ghosts[i]
2-d
stay
[xtarget,
still.
independently
you.
ghost,
directions:
simplified
ytarget]
0],
ghost
ghost.
inputs
actions
escape
escape.
ghosts
pac-man
ghosts,
inclusive,
phone
2-9
represent.
buttons)
telephone
(just
combinations
shift()
shift('t')
shifting
shifts
shifts[i]
shift
(wrapping
'u',
'a').
'a'.
alphabet,
shift('z')
applied.
shift('a')
stream.
addelement(int
mk
calculates
mkaverage
calculatemkaverage()
container.
mkaverage(int
num)
copy
traverse
below
images.
well.
unsorted
o(n)
ans[i]
ans
non-negative,
-10
[3],
[12]],
[[-10],
far
intervals.
summaryranges
addnum(int
summaryranges()
value)
a2,
endi].
summary
a1,
summarize
getintervals()
disjoint
an,
seen
starti.
servers.
second.
idle
send
originating
network
processed.
processing
directly
messages
second(s),
reply.
channel
second(s)
replies)
idle.
passing
server:
periodically.
sent
channels.
servers
server(s)
vi,
gone
resending
instantly
sends
resend
received
through.
reply
arrived
not,
servers,
master
indirectly
patience
server
arriving
elapsed
patience[i]
server.
consecutively
sums
sub
order).
recover.
unknown
all)
drawn
x-axis
container
slant
height[i]).
container,
installed
virus.
limited.
threatens
quarantine
installing
night).
infected,
virus
walls.
uninfected
affected
install
blocked
regions.
infected
rapidly,
used.
isinfected,
walls
neighboring
spreads
unless
modeled
wall.
(continuous
wall)
region
tie.
fully
resources
isinfected[i][j]
spreading
cells)
boundary.
night,
shared
231
64-bit
unsigned).
[-231,
environment
(signed
constraints,
careful
calculations.
div
word[0,...,i]
div[i]
divisibility
together,
y,
equivalent
anagram
"arts"
"rats",
"star"
{"star"}.
(swapping
"arts"}
"arts".
similarity:
"tars",
strs
similar,
{"tars",
"tars"
positions)
strs.
2),
"rats"
[pricei,
price,
happens:
amounti,
pricei.
executed.
independent
placing
look
ordertypei]
orders[i+1]
is:
else,
order's
backlog.
batch
ordertypei
placed,
amounti
executed,
backlog
orders[i]
vice
versa,
games
device_id
date
logged
event_date
event_date)
analysis
player_id
games_played
logging
login
(player_id,
device.
games.
someday
high]
sequential
[low,
column)
chessboard,
eight
0-indexed,
illustrated
stopped
make,
orthogonal
chessboard.
moving.
chessboard
(even
attempts
piece
chessboard)
knight
chess
uniformly
codes
[i,
s.length
s[i
j]
s[k]
nor
"root":
neither
p_id
"leaf":
"inner":
pairs.
file
fn.txt)
"root/d1/d2/.../dm
respectively
(f1_content,
"root/d1/d2/.../dm".
directory.
directory
terms
"directory_path/file_name.txt"
fn_content)
f1.txt(f1_content)
paths.
content
info
f2_content
directory,
info,
(f1.txt,
f2.txt(f2_content)
f2.txt
fn.txt(fn_content)"
content.
addition
multiplication,
(e.g.,
right;
'+',
expression
reading
operators
expression,
math
interpreted
3+5*2).
0-9,
school
submitted
rewarded
symbols
instructed
compute
applied
elementary
grade
arithmetic,
multiplication
points;
removed.
shares
stone.
one's
numeral.
users
did
transaction_id
visit_id.
visits
mall.
customer_id
visit_id
faces
"g":
"l":
west
stands
unit.
instructions
bounded
forever.
direction).
instructions:
plane
x-axis.
robot
north.
leaves
anti-clockwise
"r":
north
south
performs
arr2,
arr1[i]
d.
|arr1[i]-arr2[j]|
arr2[j]
d,
extending
counted
end-nodes
nodes),
calculation.
levels.
posttweet(int
able
recent
recent.
user,
unfollowing
tweetid)
follow/unfollow
follow(int
tweets,
userid.
tweetid.
followeeid.
followerid,
twitter()
feed
unfollow(int
post
posted
tweetid
composes
user's
news
feed.
followeeid)
getnewsfeed(int
userid)
userid,
followerid
twitter
(2d)
1-dimensional
creating
(1d)
original.
original,
(inclusive)
procedure,
2-dimensional
1110xxxx
110xxxxx
--------------------+-----------------------------------------
bits
validation
data.
utf-8
(binary)
11110xxx
character,
utf8
subjected
code.
1-byte
10.
byte
n-bytes
one's,
long,
translates
unicode
encoding
10xxxxxx
octet
0xxxxxxx
bytes
work:
bloom
answer.length
ki.
[ni,
ki],
ni
queries.length,
queries.
typed
compare
editors.
backspacing
"12344".
underlined
"14234"
transformable
locations.length
finish).
|locations[i]
locations[j]|.
have,
|x|
start,
locations[i]
finish.
routes
reduces
fuel
weight
destroyed,
weights
smash
left.
m)
bi],
(1-indexed)
x|
disconnected.
|y
bi.
factors
5.
limited
(consecutive
sub-sequence)
repetitions.
overlapping.
make.
22
3rd
lap,
numlaps.
tire
etc.
tires
numlaps
[fi,
tires[i]
ri
type)
lap
fi
unlimited
tire.
seconds,
2nd
race.
ri]
supply
changetime
race
laps
ri(x-1)
exist.
numerical
alphanumeric
banned,
paragraph
case-insensitive
banned.
banned
lowercase.
complex
num1
real
100].
[-100,
i2
"real+imaginaryi"
multiplications.
imaginary
num2
child
cookies[i]
unfairness
cookies,
cookies
up.
bag.
distribution.
bags
distributions.
"??abc".
initially.
"?????"
stamp.
turns.
contained
"abc??",
stamping
stamp
over
'?'.
left-most
target.length
stamped
"?abc?",
"abcba",
opening
closing
(a),
"())))".
ab
b),
(a
"()))",
"(()))"
parenthesis
removals.
odd-numbered
genre,
descending
10]
boring
rating.
movie,
description
+----------------+----------+
movie
movies
places
"boring".
tilt.
treated
tilt
uncovered.
underneath,
extracted
c2i]
dig[i]
[r1i,
artifact.
artifacts[i]
r2i,
excavate
c1i,
artifact
(ri,
c1i)
mud
extract
(r1i,
ci),
artifacts
c2i)
uncovered,
extract.
dig
(r2i,
buried
describing
rectangles.
division).
width-to-height
widthi/heighti
(using
rectangles,
rectangles[i]
division,
interchangeable
ratio.
widthj/heightj
queue
sandwiches[i]
break,
none
preference
queue's
lunch
prefers
step:
eat
sandwiches
queue).
sandwiches.
stack,
queue.
eat.
referred
students[j]
thus
cafeteria
stand
stack)
sandwich
ramp
marked
s[removable[i]]
removable
removable.length)
mark
removable,
(s
arr.length
arr[i
mountain
rumor
properties
judge.
town,
label
judge
town
secretly
nobody.
everybody
trust
trusts
exist
trust[i]
identified,
judge)
oranges
oranges.
kitchen
decided
orange.
gold
gold.
mine
collecting
down.
position,
can't
differ
"computer"
"computation"
'e'/'a',
once).
3rd,
6th,
4th,
jumping
even-numbered
jumps,
(1st,
...)
...),
jumps
(2nd,
legal
numbered,
jumps.
5th,
series
arr[j]
int[]
blacklisted
minimizes
blacklist.
pick()
solution(int
language.
likely
equally
blacklist)
optimize
blacklist
p.
remove,
turn=n
kilograms,
kilograms.
board.
limit.
determines
turn=1
exceeding
person_id
limit
person_name
hasnext()
next()
combinationlength
combinationiterator
combinationiterator(string
characters,
combinationlength)
iterator
arguments.
combination.
other,
additional
alternately
word1.
merged
append
zeroes.
and:
server-to-server
connection
network.
connections
removed,
critical
connections[i]
latin.
"oatgma".
latin"
begins
goat
latin
latin.)
'u'),
consonant
language
"ma".
vowel),
end,
"applema".
"goat"
"a"
conversion
"apple"
"goat
"aa"
pig
made-up
"ma"
inequality
nums1[j]
diff.
nums2[i]
nums1.length.
nums2[i]2
nums2[k]
2:
nums1[k]
1:
(type
nums1[i]2
nums2.length
k].
[-k,
nums[3]....
nums[2]
beginning,
vii
'0'.
minjump
maxjump,
maxjump.
1),
min(i
s[j]
fulfilled:
absent.
'p':
characters:
late.
'a':
'l':
eligible
days.
('a')
award
late
('l')
absent
attendance
present.
award.
late,
absent,
haystack,
haystack.
needle
primes
valuediff,
indexdiff
valuediff.
indexdiff.
abs(nums[i]
transport
(city
road
big
changed.
(this
ministry
narrow.
cities
reorder.
tree).
reorienting
orient
root.
deepest
depth
fee.
roads.
cities,
passingfees,
summation
journey,
journey
fees
passingfees
maxtime,
country
yi,
less.
source
yi
timei]
maxtime
connects
passingfees[j]
travel.
cities).
timei
result.
numbers.
y)
(least
non-coprime
multiple).
108.
non-coprime.
gcd(x,
lcm
said
palindromic
harmonious
lake.
chose
rains
floods
nothing
rains[i]
water,
avoid
flood
flood.
changes.
lakes
dry
rains.length
lakes.
lake,
lake
ans.length
closes
whereas
increases
'y':
n),
penalty
hour.
come,
penalty.
incur
2d-array.
parents.
2d-array
redundant
existed.
parent,
added.
problem,
-1).
plant,
watering
at.
refill
completely
plants[i]
early.
plants.
needs,
plants
primes.
primes,
words[i].
reference
short
indices.length
words.length
including)
infinitely,
diameter
arrow
xstart
y-direction)
xy-plane.
y-coordinates
taped
spherical
keeps
shot
shot.
xend.
[xstart,
stretches
xend
xend]
flat
awesome
arrangements.
sticks
uniquely-sized
[1,3,2,5,4],
arrange
visible
stick
into.
x2],
subdivided
cnti]
maxmoves
graph")
"original
xcnti,
chain
x1,
reachable
x3],
(cnti
[xcnti,
edge.
[xcnti-1,
x1],
nodes,
vi].
maxmoves,
subdivide
[x2,
xcnti],
vi],
cnti
structure.
recover
mistake.
swapped
allowed).
necessary.
(trailing
s3
s3.
queens
solutions
n-queens
puzzle.
border,
doesn't
1-bordered
libraries.
nothing.
remove(key)
myhashset
hashset
hashset.
contains(key)
hashset,
add(key)
itself).
tie,
"1110".
s[0]
s[j])
simultaneously,
(s[0]
s[j]).
(s[i]
"0110",
s[2]
(x,
triangle.
judgement
z
z)
'1's.
locked,
().
')'.
'0's
locked[i]
locked
s[i].
'('
true:
sorting
meal.
two.
deliciousness
meal
meals
deliciousness[i]
food,
foods
mentors,
survey
question's
mentors[j]
mentors
(no)
(yes).
student-mentor
students[i]
student's
scores.
mentor's
mentor
achieved.
mentor.
mentor,
compatibility
pairings
col2i.
col2i).
query[i]
col1i)
row2i
submatrix
submatrices
row1i
col1i
(row2i,
row2i,
(row1i,
col1i,
col2i],
mat[x][y]
[row1i,
cat
draw.
graph[1].
mouse
hole
ways:
graph[a]
meets
hole,
0.)
cat,
players,
ever
mouse,
are.
(node
move),
instructions,
instructions.
(elements
min(2,
[1,2,3,5],
[1,2,3,3,5].
instructions[i].
frog.
frog,
stones[j],
stones[j]|.
|stones[i]
appended
decreasing
singly-linked
holds
distinctly.
["1","2","2"],
second-largest
third-largest
level.
[2,1,3,4,7,11,29,18],
levels
[18,29,11,7,4,3,1,2].
decrement
tracked.
removerange(int
rangemodule
half-open
rangemodule()
interval.
queryrange(int
tracks
right).
tracked,
addrange(int
overlaps
ranges
module
tracked
tracking
right),
join
plan
interfere
laser
beam
security
while'1'
rows:
r2,
r1
anti-theft
activated
bank[i]
independent,
r2.
devices
beams
-1]
val,
secondi].
^
secondi
[-1,
xored
firsti.
secondi.
firsti
[firsti,
lefti.
timei,
instantaneously.
meetings
meeting,
frame.
secrets
meeting
secret.
firstperson.
finally,
versa.
attend
meetings[i]
place.
timei.
firstperson
box,
redirects
shaped
stuck
ball
hits
spans
corners
balls.
"v"
falls
fall
redirect
boards
spanning
dropping
sides.
product_key
bought
b.
occurrences
9).
max
initial.
increments
twice,
combinations.
arranging
staircase
incomplete.
build.
deleteatindex(int
prev
mylinkedlist
addattail(int
inserted.
doubly
pointer/reference
get(int
addathead(int
mylinkedlist()
index)
invalid,
next.
addatindex(int
indexth
insertion,
implementation
fingers
towards
fingers.
keyboard
x2|
(2,
distance,
|y1
coordinate.
layout
y2|.
(4,
|x1
target[i]
words[j][k].
provided
unusuable
met.
additive
03
preceding
02,
unused.
candies[i].
allocated
non-space
yyyy-mm-dd
examples.
dates.
c2,
matrix[row][col]
or,
....,
{c1,
columns.
cnumselect}
numselect
numselect,
addresses.
"0.1.2.201"
"192.168@1.1"
ip
dots.
"0.011.255.245",
"192.168.1.1"
restore
255
dots
addresses
addresses,
"192.168.1.312"
neighboring.
sequentially
postorder
(5
"3245"
(2
8)
"2582"
prime.
7).
seq[i
seq.length
(for
seq[i]
zero).
cards,
printed
cards
card.
fronts
backs[i]
fronts[i]
back.
backs
cards.
simple
<col2>
r2
c1
<col>
sheet
<row>
"<col1><row1>:<col2><row2>",
r.
<row1>
c2.
"<col><row>"
<row2>
rth
c1,
rows.
excel
r1,
<col1>
num[i]
change[num[i]]).
change[d].
mutating
to)
(or
|nums[i]
-x
nums[j]|
nums[0],
worth
[1,3,0,2,4].
[no
[nums[k],
[2,4,1,3,0],
point],
nums[nums.length
points],
afterward,
nums[k-1]].
point.
nums[1],
nums[k
[one
point].
a[i]
operation.
b[(i+x)
a.length],
differ,
'c'
"abcd"
length)
"abcc"
'd'.
fourth
[li,
(xj,
yj).
lie
(li,
points[j]
xj
li
hi).
yj]
points.length
count[j]
hi.
[xj,
yj
loses
he/she
pile.
bits.
having
21
binary.
right]
10101,
international
standard
convenience,
transformations
below:
dashes,
defines
morse
[".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]
"cab"
"-.-.",
"-...",
"-.-..--...",
have.
".-",
"-...".
6th
...).
(1,
natural
resolve
millis
millis,
asyncronous
milliseconds.
sleeps
sleep
secondlen.
firstlen
secondlen,
converted
[2
"acb",
25.
-1].
[2,
difference[i][j]
2]
words[i][j]
words[i][j+1]
difference[i]
equal-length
'1'
type-2:
"0100"
alternating,
flips
type-1:
alternating.
"1010"
type-2
"010"
title
columntitle
28
sheet,
aa
example:
equally,
redistribute
[7],
candidates.
candidates
max(heights[i+1],
heights[i]
min(heights[i],
heights[j])
heights[i+2],
heights[j-1]).
queue,
merging
piles.
impossible,
x).
pi
bitwise-xor
vali
pi,
pi.
[nodei,
vali].
nodei
parents[i]
parents[x]
parents,
case.
space-separated
nums2].
conditions,
[nums1,
vertices.
subgraph.
subgraph
triangles.
triangle,
convex
n-sided
triangulate
polygon.
polygon
triangles
triangulation
triangulation.
rational
0.1(6),
2.12,
0.1666(6)
<integerpart><.><nonrepeatingpart><(><repeatingpart><)>
<repeatingpart>.
<nonrepeatingpart>,
<integerpart>,
1/6
123.0001.
123.
123.00(1212).
0.5,
expansion
parts:
conventionally
portion
<integerpart>
0.16666666...
0.166(66).
1.(9),
<integerpart><.><nonrepeatingpart>
0.1(6)
1.,
"hh:mm"
00
23:59.
made,
"hh:mm",
format.
00:00,
24-hour
mm
23,
59.
formatted
hh
validly
val1
coprime
coprime.
val2)
gcd(val1,
val2.
val2
coprime,
split.
examples,
even,
[2,3,4],
position.
2.5.
[1,2,3,4],
top?
climbing
climb
staircase.
stairs
limitj
point,
x|.
robots
repaired.
positionj
speed.
broken;
factory[j]
repairs
repair
collide.
limit,
robot,
limits,
robot[i]
[positionj,
passes
limitj]
opposite
factories
robot.
reached
robots.
went
6.
observation.
mean.
fortunately,
face
observations
missing,
rolls[i]
divides
coin
vertex.
coins[i]
vertex,
unrooted
presence
ans.
specifically,
ans[i
frequency).
longurl)
url
shorturl
encode(string
longurl.
shorturl)
tiny
decode(string
solution()
work.
encode/decode
http://tinyurl.com/4e9iak.
companion
enter
tinyurl
restriction
https://leetcode.com/problems/design-tinyurl
url.
shorturl.
shortening
tinyurl.
problem:
service
x1
x2
booleans
nums[0..i]
least-significant-bit).
[1,0,1],
x0
most-significant-bit
(i-2)th
(0th)
(i-1)th
subsets
n2
destinations,
die
style
board[r][c]
1][0])
ladders
snakes
snake
n2.
curr,
n2)].
min(curr
boustrophedon
ladder,
move.
[curr
board[r][c].
square,
ladder.
[[-1,4],[-1,3]],
simulates
roll:
board[n
possibly
integer's
xy-plane
obstacles[i]
-1:
+x
command.
+y
-2:
origin
(xi,
degrees.
units,
commands:
instead
-y
yi).
9:
25).
euclidean
obstacle,
simulation
squared
obstacles.
middleindex
nums[middleindex-1]
nums[middleindex+1]
index.
nums[middleindex+2]
similarly,
nums[nums.length-1].
condition,
ones).
operator
(+,
/).
(-).
express
anywhere.
"x
adhere
op1,
-,
*,
usual
(op1)
negation.
subtraction,
negation
(op2)
"-x
conventions:
(op3)
unary
op2,
x"
(/)
subtraction.
stored
ignored.
merged,
accommodate
this,
unnecessary
returning
type,
ball's
wants.
attain
balls
customer).
decreases
inventory.
diminishing-valued
inventory,
own.
ball.
weirdly
transaction,
inventory
yellow
inventory[i]
balls,
scores
bags.
weights[i]
marbles
inclusively,
marble
bag,
distributing
weights[j].
marble.
boat
carry
boats
people[i]
save
carries
skills
team.
teams,
skill
skill[i]
chemistry
appending
1-indexed
"is2
sentence"
"this
sentence.
"sentence4
is2
a3
sentence4
this1
this1"
a3".
'_'
'l',
blank
bbb
aaa
'aaa'
'bbb'
average(arr)
average(a)
average(b).
volume
servings
ml
someone,
soup.
0.25.
ml's
soup,
serve
soup:
75
soup
half
25
stampheight
restrictions
(occupied).
stamps
rotated.
(empty)
stampwidth.
(m
getting
non
performed
act
instantly.
single-threaded
processingtimei]
stopping.
cpu
started,
processingtimei
tasks[i]
tasks
tasks,
[enqueuetimei,
tasks.
processing.
enqueuetimei
neighbors.
candy.
ratings.
spell.
potion
strengths
pairs[i]
spells
potions
potions,
potion.
success.
successful
spells[i]
potions[j]
strength
multiples
constraint.
task.
difficulty
[-1,2,3].
(minimum
mex
[1,2,3]
[-1,2,3]
excluded)
[1,0,3]
glasses
pictured
floor.)
cup
pouring
liquid
tower
glass,
now.
poured,
glasses,
glass
champagne,
100th
quarter
0-indexed.)
immediately
champagne.
cups
champagne
excess
poured
prefix[i]
"no
"x=#value".
solution"
equation,
equation.
"infinite
coefficient.
solutions"
'-'
variable
'x'
equation
match,
follows
here
mycalendartwo()
calendar.
events.).
[start,
booking.
mycalendartwo
successfully
end),
book(int
implementing
cause
booking
100,
base-k.
2-mirror
reads
1001
base-10
k-mirror
contrary,
backward
base-2
substrings,
descendant).
high].
trimming
depending
proven
bounds.
high,
typewriter
pointer
clockwise.
pointing
counterclockwise
variance
multiplying
original).
multiply
searched
pangram
pangram,
"fizzbuzz"
string)
"buzz"
"fizz"
fizz
buzz
(binary
trees),
bst's
remainder
mod
right],
range,
"bulky".
width,
category
mass
"bulky",
"bulky"
"heavy".
categorize
"both".
"heavy",
height.
104.
height,
"neither".
mass,
"heavy"
109.
criteria
univalue
rule:
{nums[k],
nums[nums[nums[k]]],
selection
nums[nums[k]],
s[k].
nesting
9],
anywhere
sign.
-55
73
insertion.
763.
-255.
n's
largest-valued
word1.length
word2.length
word2[j].
word1[i]
|nums1[i]
nums2[i]|
tracker
scenic
sortracker
queried
4th
ordinal
add(string
query).
get()
attractiveness
worst.
invoked
better.
supports:
better
invocation).
ranking
added,
sortracker()
locations,
querying
score,
location,
ranked
score)
route,
station.
tank
circuit
solution,
gas[i].
stations
station's
gas
erasure
hits,
erasures
does,
brick
(rowi,
disappear.
drop.
erase
coli).
erased
stable
apply.
falling
result[i]
falls,
fall.
hits[i]
stable.
hit
bricks).
brick,
bricks
pushed
popped
validate
leaves.
a.
shuffling
explode.
meet,
asteroid
meet.
asteroid,
collisions.
collision
(positive
left).
asteroids
2i
"321"
"312"
3:
"132"
labeling
"123"
"213"
listing
"231"
goal,
goal.
10-6
envelope's
envelopes[i]
russian
[wi,
other).
doll
envelope
envelope.
envelopes
b)
repetitively:
sentences,
sentences[i]
"xyzz".
words[j].
special-equivalent
"zzxy"
equivalent,
group).
words[j]
"xyzz"
"xzzy"
moves,
alicesizes
bobsizes[j]
exchange,
exchange.
has.
bobsizes
alicesizes[i]
friends,
'scroll_down',
30
session
activity_date
user.
active
inclusively.
daily
('open_session',
user_id
2019-07-27
past
session_id
'end_session',
'send_message').
tuples
arr[k]
3sum
multiplicity
source,
destination,
hamsters[i]
hamsters
bucket
fed
hamsters.
buckets
'h'
and/or
hamster
nums[right].
inclusive:
nums[left+1]
magical
there're
a2
b2
nums[c]
nums[b]
nums[d]
nums[d]]
4sum
nums[c],
nums[a]
nums[b],
quadruplets
[nums[a],
'.')
entrance.
maze.
'+').
entrancecol]
exit.
exit,
maze,
entrance
[entrancerow,
maze
exit
echo
counterclockwise.
stops.
distance[i]
2],
execute.
series.
execute
executes
functions.
functions[i]
promisepool.
resolves
functions
pending
available),
functions[i
resolve,
execution
promise
resolve.
promisepool
executing
promises
reject.
acceptable
resolves,
pool
composed
experience
continuous
(a,
matrix[i][j]
attended
student_id
subject
exam.
examinations
subject_name
subject_name.
subjects
student_name
school.
needed.
pascal's
shown:
rowindex,
rowindexth
cuisines
cuisine.
ratings)
foods,
foodratings
newrating)
name.
ratings,
changerating(string
alphabetic
y[i],
cuisine
cuisines[i]
cuisines,
highestrated(string
foodratings(string[]
food.
ratings[i]
listed
foods[i]
highest-rated
cuisine)
complement.
"101"
complement
105].
family
105
parents[0]
memory
allocator(int
mid)
mid.
allocate(int
allocator
free(int
freed.
block's
functionalities:
mid,
title.
capitalization
capitalize
space,
capitalized
decreasing,
factor
factors.
members
bookmyshow(int
gather(int
maxrow,
[]
bookmyshow
picky.
cases:
ticketing
book
allocates
chosen.
(respectively)
[c,
spectators
from,
r,
allocated,
member
hence:
hall
maxrow.
maxrow
vary
concert
scatter(int
maxrow)
favorites
companies
companies.
(indexed
favoritecompanies
favoritecompanies[i]
favorite
carpet.
tile
carpetlen,
white.
carpet
tiles[i]
operators.
operators,
computing
washing
dresses
dresses.
machines,
line,
dress
high
low,
properties.
number:
address:
'}
domain
dot
email:
{'+',
"+*-***-***-xxxx"
'@'
form:
asterisks
character).
letters)
10-13
somewhere
masking
'-',
0-3
"***-***-xxxx"
personal
mask
"*****".
"xxxx"
masked
email
"+**-***-***-xxxx"
"+***-***-***-xxxx"
symbol,
password
"baaabb0"
password,
strong.
20
strong).
"baaba0"
strong
checker
weak,
strong,
[starttimei,
valuei].
endtimei,
events[i]
valuei.
event,
starttimei
150
hold
[costi,
cashbacki].
cashbacki.
transactions,
transaction
transactions[i]
transactions.
money.
costi
student.
minimized.
consecutively.
autoincrement
arr[j
arr.length).
poisonous,
buckets,
poisonous.
(poor)
pigs
minutestotest,
live
survive.
liquid,
consume
poisonous
minutestodie,
die,
pig,
minutestodie
pigs.
poor
passed,
minutestotest
allotted
shapes.
surface
irregular
toward
grid[i][j]
cubes.
cubes
3d
j).
glue
cubes,
shapes
endi
starti
startj
intervals,
endi]
"ab",
"abc",
"cab"],
"abc".
["a",
preferred
hats,
hats
40.
wear
hats[i]
flights.
flights
src
flight
flights[i]
dst
dst,
pricei]
src,
cheapest
values).
nums[k-1]]
[0,1,2,4,4,4,5,6,6,7]
nums.length)
[4,5,6,6,7,0,1,2,4,4].
nums[k+1],
nums[n-1],
duty
robbing
security[i
rob
security[i]
planning
matter.
non-decreasing.
security,
non-increasing,
guards
time].
gang
thieves
time]
pairs,
nice.
nice
'x'.
'x's
captured
regions
capture
'o's
region.
cornered
exclusively
one),
previously
direction:
presses.
buttons
bulbs
functionality
turned
switcher
3k
statuses
press.
labels
bulbs.
4:
bulb
presses,
press,
popmiddle()
front,
frontmost
choice.
5].
pushfront(int
pushmiddle(int
popfront()
choices,
frontmiddleback
popping
popback()
pushback(int
6].
frontmiddleback()
pushing
6]
odds
occur.
"b"
"a",
additions
"c"
black.
square.
reference.
coordinates,
white,
paint
green,
painted.
painting
ones.
benefits
buffer".
fifo
isfull()
successful.
mycircularqueue
"ring
(first
normal
isempty()
enqueue(int
rear()
dequeue()
principle,
mycircularqueue(k)
front()
out)
programming
include
non-alphanumeric
converting
phrase
gray
bit,
n-bit
nums[i+1]
[1,3,3].
[1,2,3],
searchword
searchword,
index).
orange,
elapse
rotten
orange
rotten.
rotting
fresh
values:
tuple
distinct,
matters).
boomerangs.
boomerang
boomerangs
sides
rectangle,
axes.
three,
arr1.length
arr2.length.
[3]
(bitwise
and)
nestedinteger.
deserialize
parser
nested
lists.
deserialized
o(n2).
created
shifted
deletions
beautiful.
huge
logs[i]
idi
[idi,
users'
uam
action
(uam)
k),
minute.
leetcode.
leetcode,
(you
cannot).
products[i]
subtotal.
100).
products,
prices.
cashier(int
groceries
prices[i].
(price
subtotal
product[j],
product,
amount,
prices)
supermarket
getbill(int[]
prices,
amount[j]
frequented
customers.
bill,
discount)
paying
discount,
sold
((100
purchased
bill
sale.
amount)
product).
any).
paying,
cashier
percent
p3
angles
(90-degree
angles).
p1,
p4,
p2,
nums[l[i]],
nums[r[i]]
r[i]].
-1,
each,
-5,
sequences:
s[1]
[l[i],
-9
nums[l[i]+1],
arithmetic:
,
s[i+1]
cuts
item.
counter
cache,
maintained
put(int
lfu
lfucache
invalidated.
lfucache(int
key)
frequently
frequency),
cache.
capacity)
operation).
present,
invalidate
cache
recently
incremented
key,
(lfu)
(due
matching
parentheses,
innermost
square-free
boomerang.
parity
condition.
happy
(excluding
beginning.
words[(i
startindex,
n],
array's
1th
2th
holding
changes,
pillow
evenly
subarray's
gcd
behind
taking
possible..
him.
classroom.
broken,
sitting
cheating
distributions
obstacle.
obstacles
taller
first)
bi,
triplets[j]
cj)].
bj),
triplets[i]
zero):
[max(2,
updated
5)]
3]
triplets,
7),
aj),
max(bi,
max(5,
triplet.
5],
[max(ai,
max(3,
max(ci,
z]
eats
return.
koko
loves
bananas.
bananas
eating
her
slowly
hours.
likes
speed
she
bananas,
bananas-per-hour
nums[nums[i]]
zero-based
(0-indexed),
effective
eventually
c++,
*/";"
comments
"/*
macros
overlapping
"*/"
comments.
comment.
comment,
program,
closed,
details.
line:
(here,
"//"
control
"string
c++
implicit
others.
code,
comment
quote,
precedence
"/*"
'\n'.
"/*/"
non-empty.
comments,
quote
order:
right.)
(non-overlapping)
yet
newline
source[i]
equalize
exhausted
next(int
rleiterator(int[]
run-length
encoding[i]
rleiterator
rle)
exhaust,
[2,8,1,8,2,5]
[3,8,0,9,2,5]
exhausts
encoding[i
encoded)
[3,8,2,5].
encoded.
tells
iterates
[8,8,8,5,5]
rle
friend
choice,
friends
3n
consecutive).
descendants.
subtree.
x-coordinate
range.
ranges.
ri].
bombs[i]
detonated
bomb,
detonate
bombs
detonated,
felt.
bomb.
bomb
bombs,
y-coordinate
further
bombs.
(ignoring
insensitive.
completing
more.
"caaacab",
licenseplate.
12c",
case),
licenseplate
twice.
"abc
"cbca".
ignore
licenseplate,
"abccdef",
isomorphic
isomorphic.
preserving
cousins
cousins,
furthermore,
relationship).
nextcoursej
nextcoursej]
[prevcoursej,
months
relations[j]
prevcoursej
(prerequisite
graph).
ride
ride.
hour)
1.5
office,
hours,
train
office
trains
floating-point
107
dist
commute
0.5
office.
mark.
depart
dist[i]
kilometers)
tests
up-left
collect,
(diagonally)
0].
's'.
'e'.
10^9
nums[0].
positioned
ones,
substring).
upper,
in-order
n-repeated
appeared
mynumbers
biggest
subroot
subroot,
uppercase.
tree)
trees[j].
operations,
trees[i]
bsts
trees[j]
property:
n-ary
(see
examples).
farthest
depth.
nary-tree
sheet.
columnnumber,
abs(nums[i])
interesting
nums[i].
emails[i],
"alice@leetcode.com",
filtered.
"my@email.com".
'+'
address,
"alice"
besides
"leetcode.com"
forwarded
"m.y+name@email.com"
mail
address.
"alice.z@leetcode.com"
allows
"alicez@leetcode.com"
mails.
everything
'+'.
emails
graphs
star
vals
vals[i]
frog's
units)
assumes
landing
units.
2⌋
majority
truncating
punctuation).
(no
truncate
i++)
(int
0;
expected
memory.
expectednums[i];
custom
judge:
expectednums.length;
kept
expectednums
removeduplicates(nums);
assert
[...];
code:
modifying
k;
assertions
languages,
//
pass,
matter
street,
beautifully
colors[i]
j),
furthest
colors.
house.
lined
fn(arr[i],
evaluated
truthy
array.filter
filter
method.
filtering
fn,
program.
ended,
"1:end:2"
logs,
function's
recursively.
exclusive
stack:
"end"}:{timestamp}".
cpu,
starts,
"{function_id}:{"start"
"0:start:3"
ended
coli]
guard.
guarded.
guards[i]
colj]
(north,
guarded
[rowj,
guard
obstructed
west)
unguarded
[rowi,
unoccupied
walls[j]
mark:
entity
&gt;
&quot;
quotation
".
&amp;
html
are:
/.
sign:
'.
&lt;
ampersand:
parser,
entities
&frasl;
parser.
>.
<.
slash:
&apos;
&.
maximal.
"cbda",
targetwords,
startwords.
targetwords
targetwords.
startwords
verifying
"bacd",
"acbd",
"abcd".
arr2[j]|
arr1[j]|
|i
arr1.length.
|arr2[i]
of:
|arr1[i]
j|
r].
p,
handling
queries:
clone
cloned
(nums[i]
high.
harvest
reach,
startpos.
depicts
harvested
startpos
harvest.
disappear
[positioni,
fruits
amounti]
positioni
positioni.
fruits[i]
strs[1]
"vyz"].
{0,
["abcdef","uvwxyz"]
1]).
lexicographic
answer.length.
["bef",
strs[0]
strs,
strs[n
3},
deletions,
deletion
strs[2]
salary.
employee_id.
100%
bonus
'm'.
employee_id
|a
|b
closer
x|,
marks).
"name"
valuei]
wide
keyi
"?"
keyi,
knowledge.
[keyi,
key's
"(name)is(age)yearsold",
"age".
knowledge[i]
knowledge
bookings[i]
corporate
reserved
bookings
lasti
bookings,
lasti,
seatsi]
seatsi
coprimes
[uj,
vj]
nums[ans[i]]
associated
ancestor.
uj
vj
edges[j]
(words)
solvable
solvable,
verbal
(result).
runtime
cycles
(up,
mountainarray.get
circumvent
mountainarray
interface:
attempt
mountainarr.get(index)
mountainarray.length()
interactive
mountainarr,
problem.)
access
judged
mountainarray.get(k)
submissions
disqualification.
3-same-digit
new_price
(product_id,
change_date
2019-08-16.
change_date)
fix
user_id.
populate
pointers
*right;
populating
*next;
struct
*left;
arr[i-1]
arr.length.
nums2[j].
nums2.length,
degree
(contiguous)
counts[i]
69
(6
6).
task's
requirement
requiring
pill.
strength.
worker's
tasks[i]).
complete.
pills
workers,
strength,
workers[j]
workers.
pills,
pickup(i).
delivery(i)
pickup
options
services.
pickup/delivery
delivery
1]:
(⊕)
original[0].
original[i]
original[i
derived[i]
⊕
derived.
derived,
buddy
s[j].
"cbad".
asks
nums[starti
nums[endi].
nums[endi
nums[starti]
dashes
(dfs)
immediate
node),
depth-first
[4,5,6,7,0,1,2].
[0,1,2,4,5,6,7]
prior
self-loops.
sumregion(int
immutable
sumregion
col2)
col1,
row2,
matrix)
col2).
nummatrix(int[][]
(row1,
(row2,
nummatrix
col1)
works
type:
row1,
coins[i].
trip.
gain[i]
biker
altitudes.
altitude
file.
file.txt,
tenth
10th
nums2[0])
(nums1[0]
nums2[n
1])
(nums1[n
(nums1[1]
rearrangement.
nums2[1])
upper]
sequences,
[lower,
hidden
7]
differences[i]
correct.
describe
hidden,
hidden[i
[4,
4],
4]
hidden[i].
[5,
differences,
contain.
mile
arrived.
stations[i]
fueli
refuel,
miles
car.
refueling
drives.
liters
fueli]
gas,
liter
gas.
refuel
travels
station,
startfuel
transferring
countintervals()
countintervals
count()
add(int
temporary
intermediate
('m',
statement
versa)
'm'
tables.
sex
+-------------+----------+
statement,
(0).
ocurrences
occurrences.
mirror
symmetric
center).
b]
covering
d]
[a,
{"e":
"a*b*c".
[].
terms)
"b*a*c",
term.
included.
multiplied,
evalvars
"e
"0"
"4*a",
["-1*a","14"]
printed.
"3*a*a*b",
ignoring
digits.)
variables
1}
symbol.
coefficient,
symbols,
basic
breaking
"1
"5*c",
[1]),
multiplicity.
coefficient
term
3"
"-6"].
["-2*a*a*a",
"a*a*b*c"
alternates
(given
lexicographically.
expressions
["7"].
"2x"
"-x".
5"
ties
exist.)
variable,
well-formatted
["e"]
evalints
asterisk
"3*b*b",
again,
afterward
elimination
arr:
remains.
hire_date
hire
alongside
paid.
salespersons
rate,
located.
"red".
company,
order_id
order_date
sales
salesperson
related
com_id
+-----------------+---------+
salesperson,
commission_rate
commission
sales_id
removal,
[6,1,7,4,1]:
odd-indexed
even-indexed
fair.
removal.
[6,7,4,1].
[6,1,7,4].
[6,1,4,1].
n:
visit,
labeled,
determined
nextvisit
visit),
i;
nextvisit[i]
distinct).
none).
none),
(also
rhombus
purple
depicted
45
sum:
citizens
compressed
details
years
senior
provides
gender
old.
age
15.
passengers.
command
"g"
parser's
interpretation
"g",
"()"
command,
"al".
interpret
"(al)"
departments,
(employee_id,
department_id)
belongs.
department.
primary_flag
departments.
primary.
flag
'n').
department_id
'n',
joins
'n'.
[3,1,2].
[1,3,2],
[3,2,1].
[3,1,2],
arrangement
[1,3,2].
refuses
homes.
homes,
inside.
steals
robber
steal
from.
capability
robbed.
stashed
houses.
robber,
empty:
dislikes[i]
(labeled
people,
dislikes
bipartition
dislike
image[sr][sc].
sc,
image[i][j]
fill.
color),
pixel,
pixel
sr,
pixels
1]|
changed,
keyname
period,
use.
period.
"23:52"
keytime
"09:49".
alert
keycard
key-cards
keytime[i]]
person's
[keyname[i],
key-card,
"11:00"
one-hour
"10:00"
saves
alphabetically.
"23:51"
key-card
"22:51"
doors.
emits
individual
army
ruler
wizards'
wizards.
wizard.
strength[i]
kingdom,
wizard
strength),
weakest
wizards
like.
halve
trip,
trips.
non-adjacent
lying
camelcase
converts
spellchecker
capitalization:
handles
categories
spelling
mistakes:
(case-insensitive),
state.
input/output
random_index]
pointer,
x.random
random_index:
deep
brand
[val,
copied
(range
node.val
pays,
bills).
change,
$5,
bills[i]
$5.
bill.
pays
$10,
provide
$20
bills
lemonade
hand
stand,
[...,[2
acceptable;
contour
5],[7
silhouette
righti
building.
such:
grounded
ground
heighti]:
viewed
absolutely
buildings,
skyline.
[[x1,y1],[x2,y2],...].
collectively.
lefti
7],...]
endpoint
righti,
contour.
ends.
skyline
points"
"key
buildings[i]
skyline's
geometric
5],[12
5],[11
3],[4
instance,
city's
termination
task,
employees,
leavetimei
leavetimei]
worked
configuration
placement,
queen
'q'
n-queens'
his/her
cans
(instantaneously)
capacityb
needs.
alice/bob
waters
plant.
capacitya
capacities
expensive.
erect
well-fenced
enclosed.
fence
rope,
perimeter.
ans[0]
ans[1]
non-intersecting
proved
manner
s1.
belonging
groups.
15,
1st,
5th
inspection.
variety,
"001101",
"011"
buildings.
official,
cost[i][j]
size2.
size2
size1
connect
trainer,
trainer.
trainers[j]
trainer's
matched
capacity.
trainers
ability
players[i]
matchings
trainer
trainers,
training
k-group
left-out
alter
themselves
index1
nums[index2]
indexk
nums[indexk]
expressible
nums[index1]
index2
startcol]
[startrow,
left),
robot:
(startrow,
instruction
staying
'u'
(move
startcol).
up),
etc.).
outcome
tournament
against
firstplayer
round.
competes
(ascending
compete
firstplayer,
winners
tournament.
secondplayer
secondplayer,
win,
automatically
over,
advances
ordering
(player
participating.
height-balanced
fn
exceeded".
milliseconds
reject
milliseconds,
fullfill.
"time
result[0]
result[1]
pixels.
widths[0]
widths
lines,
widths[1]
choosing.
permuting
greatness
permute
threshold
them).
queries.length
indirectly.
threshold,
threshold.
connectivity
downwards
nodes).
leaf,
largest.
nextlargest.
reduction
fibonacci
fibonacci-like
xi+1
8].
xn
xi+2
server,
weight,
ans[j]
tasks[j].
priorities
tasks[j]
servers[i]
leads
lead_id's
partner
make_name
make_name,
partner_id's.
partner_id
date_id
partners
will,
dailysales
lead_id
suggests
products.
suggested
searchword.
typed.
suggestions
minimums
sum(w).
w.length
75%).
0.25
0.75
w[i]
25%),
pickindex(),
picking
get(index,
snap()
snapshotarray
snap_id)
took
array-like
snapshotarray(int
snap_id:
set(index,
snapshot
snap_id
labels.
min(h))
trees,
mhts'
leaf.
(mhts).
grid[m
tries
grid[0][0]).
1][n
wi.
wi]
maxlen.
maxlen
cut
[4,6],
(notice
r(x)
possibilities.
r(e1)
cartesian
r(e2)},
"abefh",
"acefh"}
grammar
{a
comma-delimited
{"ac","ad","bc","bd"}
union
below,
e2,
{"w"}
r("{a,b}{c,d}")
represents.
grammar:
"acdfh",
e1,
{"a","b","c"}
"abdfh",
"abefg",
e2)
×
grammar,
{"a"}
r("a")
e1
r("w")
r(expr)
r({e1,
r(e1
ek
{x}.
concatenation,
expressions,
examples:
understood
"acefg",
r("a{b,c}{d,e}f{g,h}")
{"abdfg",
r("{{a,b},{b,c}}")
∪
r("{a,b,c}")
r(e2)
"acdfg",
expression.
concatenations
once)
...})
brace
singleton
y1',
y1
(x1',
matrix[x][y]
y2.
y2
x1'.
y2')
different:
x2',
widths.
crossed
crossed.
bricks.
unit)
obviously
drawing
reset()
flip()
resets
two,
2x.
rocks
additionalrocks,
rocks[i]
rocks.
capacity[i]
back,
support
(double-ended
empty).
natively.
supported
x)
language,
deque
(lifo)
peek/pop
(push,
simulate
empty()
queues
queues.
mystack
last-in-first-out
queue)
[parenti,
descriptions
islefti
parenti
childi
parenti.
islefti]
childi,
descriptions[i]
(x
movecost[i][j]
movecost
eval().
evaluates
evaluation.
mathematical
adjacent.
_.isequal()
objects
json.parse.
equality
o2,
deeply
json
json.
o1
===
lodash's
substitutions
tright,
tright.
tleft
tright
outgoing
edges[i].
operations[i]
'c'.
calculations
baseball
reconstruction
(queue[0]
ki
kj]
ki]
people.
attributes
queue[j]
[hi,
[hj,
subtrees.
splitted
border.
for:
mat[r][c]
answer[i][j]
numsdivide.
get(string
time-based
previously,
timestamp_prev.
timemap()
set(string
key-value
timestamp)
timemap
retrieve
timestamp_prev
k-sum
numrows,
numrows
successor(bob,
calling
throne
throneinheritance(string
kingname)
kingdom
children,
"alice",
grandchildren,
dead.
dies
who's
far,
jack.
birth(string
parentname,
parentname
alice,
curorder:
["king"].
well-defined
while,
death
birth
death(string
successor(x's
name)
getinheritanceorder()
recursive
throneinheritance
curorder
x's
inheritance.
"alice"].
marking
king,
inheritance
successor(alice,
jack,
"jack"].
["king",
member.
successor(king,
"jack",
childname.
oldest
bob,
affect
king
excluding
curorder)
"bob"].
childname)
older
bob),
curorder):
someone
successor(jack,
son
curorder),
gave
born.
(alice
successor(x,
q(int
votes
topvotedcandidate
topvotedcandidate(int[]
times[i].
(among
election,
election
candidates)
persons[i]
times)
persons,
cast
tied
factorial(n
fib(n
fib,
fib
memoize
cached
memoized
factorial.
inputs.
functions:
hamming
stonevalue.
"tie"
"bob"
taken.
"dacb"
anagrams,
"abdc".
selecting
words[i
anagrams
0s,
[0,1,2]
[0,0,1,1,1,2]
[0,1,2,0]
[2,1,0],
(consisting
special.
2s.
[1],
seed
destroy
targets.
seeding
targets
043
allowed.
02
now,
accounts
account.
definitely
accounts[i]
accounts[i][0]
account
accounts.
accounts,
considering
systems.
conflict,
alphabetically
votes.
competition.
resolved.
positions,
voter
position-one
participating
voters
statements[i][j]
statements[i][i]
lie.
truth.
person:
truth
persons:
statements
left)
horizontally.
(top
(left
crossword
vertically.
words),
occupy
weighti]
lastly,
weighti.
constituent
src1,
src2,
src1
src2
dest
(n,
main
elapsed,
inaccessible.
get(key):
count():
setting
set(key,
expiration
duration):
un-expired
methods:
overwritten
however
[2,3,1,4]
[8,4,3,5,1]
mines.
[clickr,
diagonals),
above,
click
mines
(wikipedia,
'e'
char
revealing
mine,
('1'
revealed
minesweeper
mine.
'8')
clickc]
('m'
'e').
revealed.
game)!
unrevealed
revealed,
over.
0's,
characters'
8.
"abe"
splits
subsets.
set).
ors
commands
(accelerate)
+=
"aar",
(reverse):
stays
+1
*=
positions.
("ab,",
'9'),
"cd!",
punctuation
("a-b"
('!',
"."
marks
'-'.
'z'),
"ab-"
('-'),
'.',
hyphen
"a!b"
"c.,"
broken
hyphens
','),
valid).
digits).
('
('0'
"-ab"
hyphens,
')
afterwards,
_.chunk
chunked
solution(int[]
shuffle
shuffle()
shuffling.
planted.
days,
growtime,
planttime
blooming.
seeds.
grow
seed.
growtime[i]
each:
growth,
grow,
growth
blooms
seeds
planttime[i]
bloomed
bloom.
uppercase)
(lowercase
"acb
cab"
def",
"def
dfe"
"adc
bef"
subarray,
tokenid
countunexpiredtokens(int
authentication
tokens.
currenttime)
timetolive)
(renew
happens.
session,
timetolive
authenticationmanager
expiry
renews
ignored,
renewed,
different)
countunexpiredtokens),
timetolive.
currenttime.
actions.
authenticationmanager(int
generate(string
renew(string
unexpired
expires
currenttime
expire
extended
(potentially
tokenid,
(all
islands
(water).
1s.
islands.
bottom)
island
(land)
totally
winner.
heap,
heap
friend:
nim
heap.
solutions,
constraints
erasing
cookie.
cookies.
cookie
g[i],
with;
but,
greed
nums2.length).
count(int
nums2[index],
tot)
findsumpairs
tot.
nums1,
nums2)
nums2[index]
findsumpairs(int[]
f(0)
f(n
commonly
f(1)
f(n).
f(n)
res[0][(n-1)/2]).
res
res.
res[r+1][c-2height-r-1]
res[r+1][c+2height-r-1].
(more
res[r][c],
2height+1
placed.
equals:
satisfied.
follower
app
followers
follower_id)
follower_id
followers.
(user_id,
afterwards.
delay,
aware
discovering
forget,
forget
forgot
delay
discovers
kids
has,
extracandies,
candies[i]
kids,
kid
cbtinserter(treenode
filled,
cbtinserter
insert(int
inserter
v)
treenode.
level,
last,
complete,
get_root()
treenode
third".
third",
"first
bigram
compact
environment.
computer
transmitted
serialization/deserialization
buffer,
reconstructed
link
["2",
"53.5e93",
numbers:
"3e+7",
"-90e3",
"-0.1",
"-+3",
"e3",
"--6",
"95a54e53"].
"+3.14",
"99e2.5",
"4.",
"1e",
order):
"-123.456e789"],
"2e10",
"0089",
"1a",
'.'.
"-.9",
(optional)
"+6e-1",
formats:
'-').
trapping
rain
elevation
raining.
trap
map,
heightmap
index:
questions.
counti
[counti,
marksi]
marksi
indistinguishable.
types[i]
flatten
"linked
list"
pre-order
list":
actor
directors
actors
(actor_id,
director
cooperated
director_id
director_id)
actordirector
actor_id
primefactors.
divisors,
[2,2,3],
startat,
targetseconds.
fatigue.
81
cooking
pushcost
microwave
interested
movecost,
finger
cook
generic
interprets
targetseconds
80
prepending
(three
normalized
99
0954
(four
cost.
remember
54
pushcost,
normalizes
startat.
span
stock's
backward)
today
quotes
today's
[7,2,1,2]
stockspanner
stockspanner()
collects
today,
[7,34,1,2]
quality[i]
ratio
expectation.
expectation
wage
wage[i]
worker.
same)
modulo.
"gold
placement
"bronze
score[i]
rank:
medal".
ranks
athlete's
"x").
scores,
"silver
athlete.
athletes
athlete,
athlete
pattern[0]
pattern[1]
divisors.
5).
divisor,
10/2
division's
7/3
appearing
flips.
versa).
sale_date
buyer_id
2019-03-31
2019.
2019-01-01
unit_price
seller_id
product_name
"aba".
25]
'z'.
mycalendar()
mycalendar
minimum.
desiredtotal,
adding,
re-use
15
"100
total,
game"
100.
maxchoosableinteger
force
integers?
node.left,
node.left
cases.
tree),
node.right.
requirements
node.val,
node.val.
traverses
node.right
particularly,
subtracted
diff[i]
i].
diff
nums[0,
nums[i,
award,
captures
west),
pawn,
pawn
pawns
rook's
rook.
bishop.
'p',
rook
bishops
attacking.
stop,
groupsizes,
groupsizes[i]
groupsizes[1]
groupsizes[i].
returns:
signfunc(x)
signfunc(product).
occurs.
compactly
idx)
bitset.
bitset
all()
fix(int
bits,
bitset(int
tostring()
unfix(int
one()
idx
size)
coincide
'driver',
driver_id
canceled
"2013-10-01"
'cancelled_by_driver',
(by
users_id,
('client',
users.
unbanned
('yes',
users_id
('completed',
taxi
request_at
driver
banned)
'cancelled_by_client').
"2013-10-03".
client_id
'no').
city_id
'partner').
role
driver)
cancellation
client
m|
interleaving
t2
s3,
|n
t3
sn
tm
peek()
constructor
peeking
iterator.
peekingiterator(iterator<int>
hasnext
peekingiterator
iterator,
peek
prizepositions
prize.
intersect.
prize
prizepositions[i]
segments).
prizes
connected.
unvisited
forever
probability.
candytype[i].
doctor's
advised
doctor
candytype
advice.
noticed
much,
even).
doctor.
profitable
crime
minprofit
crime.
members,
crimes
participate
crime,
participates
profit[i]
various
schemes
commit.
scheme
group[i]
getrandom()
head)
solution(listnode
abs(arr[i]
putting
monday.
sunday,
monday,
tuesday
hercy
$1
before.
75.
5)
node2
cycles.
node2,
appear,
multiple,
"ababb"
contains,
"aba"
occurrence.
appears,
appear.
none,
cities.
distancei]
distancei.
roads[i]
parsed
true,
datastream
consec(int
datastream(int
map.
myhashmap
(key,
myhashmap()
mapped,
hashmap
hashmap.
(l,r).
a[l],a[l+1],...,a[r]
increment.
swapped.
sum(arr)
nums2[left...right].
[1,12,13,4,5]
[11,12,13,14,15]
sum(nums1)
spliced
[1,2,3,4,5]
nums1[left...right]
[11,2,3,14,15].
sum(nums2),
arr[left...right]
temperatures
warmer
temperatures,
temperature.
completeness
2h
sell_date.
sell_date
market.
activities:
"aaca"
lcp
word[j,n-1].
lcp.
lcp,
word[i,n-1]
lcp[i][j]
"aabd"
piece.
wins,
'b'.
rides
"distance".
travellers
travelled_distance
coffee".
"enjoy
"enjoyyourcoffee"
thus,
ideab.
ideab
space)
naming
ideab,
ideas
company.
ideas,
ideaa
trans_id
amounts
balance
transferred
10000.
transacted_on
deletion.
elements)
optionally
(contiguous
weight.
pseudo-critical
hand,
all.
mst
msts
graph's
(mst).
(mst)
rulevalue.
color,
colori.
rule.
[typei,
colori,
"color"
items[i]
rulevalue
typei.
"type"
namei.
rulekey
namei]
-.
distances
scheduling
bcosti],
bcosti.
fly
flying
acosti,
interview
[acosti,
grid[i
1][0].
grid[i][j
grid[i][n
grid[0][0].
succprob[i].
1e-5.
success
threw
dart
throwing
dartboard
dartboard.
darts
darts[i]
knows
throws
sources
arrays,
"abcd",
"eeecd".
testcase
indexing
occur,
targets,
targets[i]
replacements
"bc"
sources[i]
"eee",
sources,
["ab","bc"]
targets[i].
movement).
cells:
(k,
movement),
(downward
(rightward
streak
streak.
element)
themselves,
mirrored),
individually
degrees,
180
alone.
(0-59).
"10:2"
"1:00".
watch
turnedon
leds
(0-11),
"01:00"
led
"4:51".
pm),
"10:02".
subtracting
must:
"abaacc"
frequencies
few
xn-2.
generator
xn-1
relation
arr[j]]
comparison
[arr[i],
j:
turbulent
arr[k
odd.
ant(s)
plank
immediately.
plank,
ant
wooden
ants
plank.
marked.
etc).
comparisons
search_cost
richest
any.
gifts,
gifts
gifts.
"abcde",
"bcdea"
shift.
negations
-nums[i].
[xcentre,
ycentre]
centre
positions[i]
minimized:
2d-map
formula
require
[actuali,
spend
energy
minimumi]:
actuali
minimumi
finishing
12]
complete).
dropped
(i+2)th
busy,
k-1
all).
k)th
try
load,
handled
arrives.
busiest
arrival[i]
load[i]
request,
computational
necessary).
load
server(s).
expressed
'\',
'/',
slashes
escaped,
'\\'.
'\'
backslash
cardpoints.
cardpoints
shape.
tile.
domino
tiling
tiling,
tilings
tiles:
tromino
finalsum,
(4
(12),
4)
6),
(unique
finalsum):
8).
finalsum
summing
10),
finalsum.
changed.)
angle/2].
see.
vision
posy
tag
plane.
[d
view.
determining
field
posx
angle,
view
obstruct
[posx,
angle/2,
browser
rotate.
angle
posy]
foo(),
n;
bar()
threads:
"foobar"
print("bar");
print("foo");
foo()
foobar
bar().
containedboxes[i]
initialboxes
status[i]
containedboxes
status,
arrays:
kelvin
temperature
1.80
273.15
celsius.
[kelvin,
32.00
celsius,
floating
celsius
fahrenheit].
fahrenheit
function:
calls.
watered
ranges[i],
one-dimensional
open.
i-th
ranges[i]
taps
ranges[i]]
tap
words2,
words1
|arr[j]
triplets.
arr[j],
arr[j]|
(arr[i],
|arr[i]
arr[k]|
arr[k])
k-repeating
word's
8+0+3.
win.
'?'
"243803",
2+4+3
"243801",
8+0+1.
num:
half.
labels[i]).
lower-case
sub-tree
done,
domino.
dominoes,
domino,
halves
tops
bottoms[i]
rotations
bottoms
tile.)
tops[i]
|a.val
b.val|
['a',
(string
"ac",
'c'].
"abcbabcbcb"
"ababbc"
"aa",
"baa"
k-th
ages
age[y]
&&
ages[i]
age[x]
appropriate
path).
expected[i]
expected[i].
photo
annual
specialroads[i]
starty]
y2i)
x1|
x2i,
targety]
(targetx,
y1i)
[x1i,
starty)
(x1i,
|y2
y2i,
costi]
(startx,
[startx,
y1|.
costi.
(x2i,
[targetx,
y1i,
targety).
|x2
specialroads
[5,2,3,7,2]
3|
a[j].
nums[li...ri]
|a[i]
a[j]
|2
a[j]|,
a.length
arr[3]).
arr[i-k]
arr[4]
(because
because:
arr[3]
arr[1])
k-increasing
arr[5]
inclusively
00:00
?).
hh:mm,
university.
groups,
competition
formed.
grades
last).
entering
examples)
reverses
this:
"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....".
wraparound
base.
"abcdefghijklmnopqrstuvwxyz",
')'
)
(
(deque).
mycirculardeque(int
getrear()
deletelast()
successful,
double-ended
getfront()
insertlast()
deletefront()
rear
insertfront()
deque.
mycirculardeque
"balloon"
guess,
says
v]
guesses
guesses,
guessed
[u,
lazy,
guesses[j]
vj.
4-directional
non-obstacle
walks
startvalue
startvalue.
partitioning,
partitioning.
"5489355412".
"5489355142":
smallest-valued
"5489355241".
care
"5489355214".
"5489355421".
sitting.
seats[i]
seat,
him
alex
equations,
forms:
relationships
"xi==yi"
one-letter
"xi!=yi".here,
equations
satisfiability
equations[i]
ret
[valuei,
valuei
items2,
weighti],
items1
weighti
ret[i]
suits.
worst:
ranks[i]
"high
suit
suits[i].
rank.
kind":
hands
"flush":
suit.
card":
"pair":
poker
"three
case-sensitive.
taken:
tape,
tape.
tape
cousins'
itself),
"zxcvbnm".
"asdfghjkl",
keyboard:
american
"qwertyuiop",
decreasing.
'9',
num[i
pattern[i]
yourself
imagine
"dva".
"a".
options:
construct.
"dv",
copies
reordered.
nums2[i1],
nums1[ik
i1,
nums1[i1]
multiplied
(nums1[i0]
i0,
n-1}
min(nums2[i0]
,nums2[ik
+...+
ik
graph:
(assuming
1-indexed)
solution.
carpets,
visible.
floor:
numcarpets
tiles.
carpetlen
carpetlen.
carpets
floor[i]
moves).
sizes
(meaning
solitaire
consisiting
recorddate
rising
(yesterday).
weather
dates'
returnedarray[i]
array.map
typing
sometimes,
examine
pressed.
pressed,
keyboard.
(optionally
"h1o2"
"h2o"
chemical
"h2o2he3mg4"
order),
formulas.
atoms
element's
produce
formula.
atom.
"(h2o2)"
"(h2o2)3"
formulas
"h2o2"
follow.
atomic
added)
formula,
colconditions
[abovei,
abovei
colconditions[i]
righti].
belowi],
rowconditions[i]
given:
belowi
rowconditions
(nums[i],
|val|
k-diff
nums[j]),
nums:
where,
[1,2,1,0,0,0].
[1,0,2,0,0,1]
sequentially,
skip
nums[i]),
('c',
('b',
'c')
abc
bce
delete.
"bce",
cae
'a')
"cae"]
sorted,
'e')
scheduler
completion
completed,
performed.
break.
'9')
'i')
'z')
'26#')
mapping.
('10#'
('j'
videos,
video)
upload(int
videos.
luprefix
uploaded
"upload"
upload
luprefix(int
videos
uploads
definition.
longest()
subpath
country.
friend,
friend's
country,
arrlen,
arrlen.
time).
clips
endi.
sporting
stitching
clips[i]
clip
freely.
lasted
7].
referee
referee_id
initial,
spread
m(initial),
m(initial)
m(initial).
adjacency
malware,
manner.
malware
graph[i][j]
malware.
wealth.
accounts[i][j]
wealth
customer's
remove.
edits.
edits,
comprise
edits
powerful
bound,
bound.
(cells
cherry,
thorn
through,
collected.
cherries,
cherry
cherries
maximized,
|y0
y0)
distance:
|x0
land,
(x0,
manhattan
trio,
trio
trios.
take,
prerequisites[i]
courses,
numcourses
ai.
seq.length).
depth(b)),
depth(s)
")("
")")
depth(b))
vps's
depths
depth("("
vps's.
"()()",
"("
seq,
vps
vps)
seq.length)
"(()"
depth(a),
depth("")
vps's,
"()(()())"
similarly
max(depth(a),
")"
b:
vps.
encodes
depth(a
(denoted
b.length
righti.
powers,
answers[i]
powers[j]
undefined.
class's
methods.
superclass.
factorial(10)
clumsy
11.
'*',
processed
clumsy(10)
arithmetic.
steps,
solution(int[][]
yi)
(ai,
rects)
xi,
rects[i]
rects.
rects
kind
deck
deck[i]
pleasing,
triangular
aesthetically
(left)
"bac"
patterns
beneath
allowed,
three-letter
(right)
transition
frequency,
vali.
vali]
respecting
[a1,
|a2
an|]
obeys
a3|,
an],
ranging
a3,
a2|,
|an-1
requirement:
|a3
[|a1
a4|,
nums[t]
nums[t],
resize
(to
dynamic
size).
sizet
wasted
sizet,
resizing
designing
prison
occupied.
vacant.
vacant,
vacant
above).
reordered
beans
beans,
bean)
bean
(still
index's
unmarked.
unmarked
init.
increment()
accept
createcounter.
init
decrement()
non-repeating
"ccc"
"aaa",
"bbb",
fn(x)
[f(x),
identity
g(x),
[f1,
h(x)]
f2,
output.
fn],
f(g(h(x))).
f3,
f(x)
nums.length).
increasing,
lengths[i]
queryindices
querycharacters[i].
querycharacters
queryindices[i]
it).
delivery_id
customers,
precisely
specify
customer_pref_delivery_date
+-----------------------------+---------+
scheduled.
(on
immediate;
zero-filled
")".
")",
depth(c)
numbercontainers()
numbercontainers
fills
number)
change(int
infrastructure
infrastructure.
roads,
lists:
list1
list2
list1's
bth
ath
result:
reindexing
[4,2,5,3]
subsequence).
(after
elements),
[2,4,2]
[4,2,3,7,2,1,4]
[2,7,4]
elements'
xn).
raised
pow(x,
9)
remap
contest
d2.
remapping
d1
replaces
sneakily
change.
danny
weekly
itself,
congratulate
mittal"
remaps
obtaining
d2,
326.
"danny
mittal
projection
3-dimensional
yz,
planes.
"shadow"
xy,
shadow,
looking
viewing
zx
projections.
yyyy-mm-dd,
gregorian
delayed
half-closed
rooms,
held
manner:
endi).
unused,
unused
room.
meeting.
s[x..y],
s[i..j]
in,
accepter_id)
friends.
(requester_id,
requester_id
accept_date
requestaccepted
accepter_id
ii:
rightsum[i]
|leftsum[i]
rightsum[i]|.
leftsum[i]
collection
layer
cyclic
cyclically
counter-clockwise
layer:
layers,
preserved.
signs.
sign,
deci-binary,
112
101
1100
3001
deci-binary
divisors[i].
divisors[i]
choices.
incurred
communicate
center,
green.
traffic
versa
green
signal
signals
red
transformation.
array.groupby(fn)
acceptable.
_.groupby
fn(arr[i])
callback
sure
results.
special,
routes[0]
initially),
routes[i]
even-valued
grandparent.
grandparent,
grandparent
decimal,
arr[1],
[1,1]
part,
part.
arr[0],
s1's
bk,
sections
11),
bobarrows
section,
opponents
archery
numarrows
scoring
arrows.
shoots
ak
numarrows.
alicearrows
bk
floor(nums[i]
division.
floor()
floored
removed:
01
k-booking
events.)
mycalendarthree
mycalendarthree()
endtime),
arr[banned[i]]
banned[i]
bring
i's.
num2,
biginteger
used,
(k),
folders
folder
names[i].
hold:
o(log(arr.length))
whitespace
weights).
package
port
weights[i].
shipped
belt
ship.
packages
conveyor
ship
ideal
maxvalue,
bits:
namely,
'13',
digits[i]
['1','3','5'],
'1351315'.
'551',
restrictions[i]
result[j]
upon
1]),
requests[j]
restrictions,
restricted
requests,
requests[j
floors
egg
certainty
eggs
breaks,
f
reuse
unbroken
position[i].
chip
chips
position[i]
chips,
excluded).
decoding
"13",
"17",
"18",
"15",
"19".
"11",
"1*"
"16",
"14",
operands
possibilities
sub-arrays.
21.
rev(120)
321,
rev(nums[j])
rev(123)
rev(nums[i])
rev(x)
worddict,
segmentation.
reused
divisors:
palindromes.
12321
13
108].
stars
*.
non-star
punishment
incomplete
flowers[i]
caretaker
newflowers,
partial.
additionally
newflowers
gardens.
rectilinear
by2).
ay1)
(bx1,
ay2).
by1)
(bx2,
(ax1,
(ax2,
1000.
empid
respective
supervisor
bonus.
totals
[2,5,6]
suffix.
times).
joined
0.1
1.0
2.5.33
revisions
1.1
revision
version1
version2,
001
left-to-right
bulbs,
on).
bulb.
off.
(turning
toggle
targetword,
firstword
letter's
'j'
firstword,
"021".
secondword
secondword,
ri),
d)
n-digits
1337.
(1-indexed).
blue,
library's
like,
fee
fish
represents:
fish,
c),
fisher
grid[r][c]
"sep",
"dec"}.
{"jan",
reformat
"feb",
[1900,
"3rd",
2100].
"31st"}.
"apr",
{"1st",
"2nd",
"jun",
"nov",
"30th",
yyyy
"aug",
"jul",
month.
"mar",
"may",
"4th",
"oct",
dd
row-wise
column-wise,
evil,
evil
"cd"
concatenates
west.
golf
matrix:
tallest.
event.
tree's
(an
forest
walked
xi)
max(nums[j]
mi.
mi,
mi].
uniques
(only
index-0).
start).
start)
correctly
returns.
retain
ahead
intersected
all,
skipa
lista
intersectval
linked-lists
(your
heads,
listb
skipb
heada
inputs):
heads
c1:
headb,
headb
sub-array
k-concatenation
operations[i][1]
operations[i][0]
operations[i][1].
25%
winner,
array:
categories.
[$20000,
"average
monthly
salary":
$20000.
account_id
$50000].
"low
category.
category,
salaries
$50000.
myqueue
stacks
peek,
stacks.
(fifo)
schedule.
dependent
jobdifficulty
jobs
jobdifficulty[i].
job,
difficulties
seperate
commas
realized
wrote
[1,4,1,2],
[1,4,3,1,2].
partial).
level).
suffixes
required,
suffix)
"<a/b>",
'u'.
swapped,
gravity
side-view
clockwise,
lands
obstacles'
box's
gravity.
stationary
inertia
rests
requested
messages.
'timeout')
confirmed
('confirmed',
time_stamp)
confirmations
confirmation
time_stamp
signup
signups
datetime
confirming
'confirmed'
('confirmed')
expired
('timeout').
prototype
array.last()
[7,7,7,7],
slices
[1,3,5,7,9],
[3,-1,-5,-9]
thousands
(".")
thousand
separator
row-traversing
were.
matlab,
parameters
matrix;
reshaped
handy
legal,
wanted
reshape
'i'.
verticalcuts[j]
horizontalcuts
verticalcuts.
verticalcuts
horizontalcuts[i]
cake
cut.
(target),
candidate
(candidates)
dist.
rung.
rung
rung)
rungs
unix-style
'..'
'/'.
'..')
file/directory
'...'
canonical
'/')
simplify
slash
directories
'//')
refers
night.
tonight
police
police.
house,
professional
alerting
stashed.
meanwhile,
contact
history
smooth
periods.
stock,
exempted
descent
progression
progression.
representative
representative.
fuel.
representatives
leetcode",
cool",
soul"
"i
sound
circular.
"eetcode",
leetcode"
"leetcode"
"leetcode
exercises
delightful",
typically
phrase,
"world".
words2.
"wrr"
words1.
universal
"warrior"
world".
createhelloworld.
enddayi.
endtimei.
[startdayi,
enddayi].
startdayi
attend.
each.
digits:
dashes.
',
reformatting
formatting.
firstly,
segmented
substrings:
subset.
toggling
0's).
salary[i]
storage
portsi
ports.
delivered
[portsi,
ports
boxes[i]
portscount
deliver
carry.
maxweight.
given.
maxweight
maxboxes
portscount,
needed,
limits
maxboxes,
port,
delivering
delivered.
loaded
weightsi
constraints.
recieve
60ms,
35ms,
135ms.
_.debounce()
30ms,
debounce
100ms.
400ms.
debounced
diagram
cancelled,
50ms,
cancelled
parameters.
95ms,
100ms
150ms.
(a,b,c)
sx,
ty)
(tx,
sy)
sy,
(sx,
ty,
y).
tx,
missing.
information.
clock
?
digital
"hh:mm".
unknown,
"23:59".
"00:00"
simulator
introduced
constraint
roll.
rollmax[i]
rollmax
construct([a[i
construct(b).
construct(a).
(root
a[i].
construct(a)
construct([a[0],
construct(a))
a[i
a[a.length
routine:
1]]).
inclusive)
vowel.
binary,
32-bits
01101
uni-value
uni-value.
not).
[1,5,3]
(ie,
[2,3,5]
before,
haven’t
want:
indexes
(arr[0]
sums.
2m.
max(m,
allowed:
jug
available.
jugs
targetcapacity
pour
measurable,
jugs.
jug2capacity
measure
jug1capacity
liters.
till
(that
arr[righti]
arr[lefti
arr[lefti]
).
maximizes
respect
advantage
returning.
pick(int
i's,
continent
3000000
bigint
population
countries
countries.
km2),
gdp
belongs,
25000000).
twenty-five
population,
million
xj|
2d-plane,
yj|,
|xi
them:
|yi
follow:
f(k)
arrk[n
f(n-1).
arrk[1]
arrk[0]
arrk
clock-wise.
f(1),
f(0),
p's
brings
losers
friend.
forth.
start.
(1-indexed.)
(recall
arrangements
it.)
nums4
nums3[k]
l)
nums4[l]
nums3,
sessiontime
sessiontime,
tasks[i].
session.
sessions
ops[i]
m[x][y]
ops,
reorganize
rearrangement
0.6
marks.
km/h)
speed,
hoursbefore,
mark,
skips
wait.
letting
1.4
road.
skipping
kilometers.
tic-tac-toe:
tic-tac-toe
'o'.
diagonal.
filling
squares,
strs[1][1]
strs[0][1]
(row)
strs[1][strs[1].length
strs[0][strs[0].length
(strs[1][0]
(strs[0][0]
decomposition
subtextk)
subtext2
(subtext1,
subtexti
subtextk
k).
subtext1
subtext2,
text).
veganfriendlyi,
ratingi,
maxprice
pricei,
lowest.
veganfriendlyi
restaurants
filters.
true)
maxdistance
filtering,
restaurants[i]
veganfriendly
vegan-friendly,
simplicity
restaurant).
distancei].
rating,
filters
01,
0110.
[1,3,2]
integer).
inorder
calculator.
display.
left/right
sidelengthi
sidelengthi]
brushing
direction)
lands,
squares.
freezes
moved.
dropped,
tallest
landed
(negative
query_name
collected
poor_query_percentage.
database.
query_name,
500.
poor_query_percentage
headid.
manager[i]
news.
inform
news).
informtime[i]
subordination
subordinates,
urgent
manager[headid]
minutes,
create.
k-similar
k-similar.
zigzag
between).
vertical)
island,
disconnect
(1)
(horizontal
(rook,
(r+1,
bishops).
instantaneously
(rooks,
piece,
c-1),
ci)
queen,
c-1).
bishop)
pieces[i]
vertically,
queens,
(r-1,
c+1),
bishop
prefix-aligned
flips[i]
flipped
3].
[startj,
firstlist
intersections
secondlist[j]
endj].
firstlist[i]
secondlist,
inversions.
inversions
global
unlocks.
entered
protected
"345",
cracking
password.
"01",
checking
"234",
"0",
safe
peculiar
"012345":
"012",
"345"
permuted
property.
previously.
hectares
farmland.
areas
[r1,
designated
c1)
(r2,
c2].
organized,
4-length
c2)
(m-1,
forested
(r1,
hectare
n-1).
four-directionally
farmland
url,
forwarding
back(int
clears
browser.
steps)
page.
browserhistory(string
visit(string
tab
history.
forward(int
homepage)
url)
browserhistory
homepage
fruit
min(basket1[i],basket2[j]).
basket1
basket2.
basket2
baskets.
2's,
92],
[23,
329].
new2,
[223,
2932,
93],
new2
9]
new2]
[22,
new1
[new1,
new2.
maxdoubles,
maxdoubles
i+1
ladders.
bricks,
building's
h[i])
(h[i+1]
graph[i]
(dag)
graph[i][j]).
rolling
sided
rolls[i].
highest-ranked
shop.
rank,
(lower
col]
[row,
(smaller
(highest
rank).
range).
pricing
(shorter
lowest).
(answer[i],
satisfies:
answer[j])
cost2
cost1
pens
quantities
pen
utensil.
pencils
pencils.
pencil
throttle
throttled
80ms
arguments
overwrite
delay.
80ms.
40ms,
60ms.
arguments,
s[j]=
(i,j)
adjacentpairs,
adjacentpairs
adjacentpairs[i]
[nums[i],
nums[i]].
nums[i+1]]
[nums[i+1],
forgotten
integer;
b.length)
repeatlimitedstring
repeatlimit.
repeatlimit
min(a.length,
pref[i]
arr[i].
surprisingly,
alien
e2)"
mult
follows.
scopes
syntax
variable.
"(add
expr.
parse
e2.
vn
scope.
scope
"add",
en
v1
question,
legal.
"mult",
sequentially;
"(mult
"mult"
of.
expr)",
e2
"let",
v2
"(let
evaluated,
parentheses)
lisp-like
negative.)
evaluation,
lisp
fraction
players.
chunk.
partitions),
occurred
mode,
mode
mode(s)
0))
corner).
clear
8-directionally
1))
enters
leave(int
seat()
p)
sits
examroom(int
set.
examroom
tic
grid[rowi][coli].
moves[i]
toe
tac
"draw".
b).
movements
"pending".
tic-tac-toe),
"l",
too.
"c",
"t",
therefore
"d"
countuniquechars(s)
countuniquechars(t)
positions).
play.
particular,
say,
play,
[1,2,5],
stones,
-2
"0".
-2.
lru
exceeds
(lru)
lrucache
initialize
evict
lrucache(int
fifth
bookcase
shelf,
bookshelf
books[i]
books.
thickness
book.
[thicknessi,
shelf
increased
shelfwidth,
books,
shelf.
shelfwidth.
shelves
books
departmentid
(indexing
i=queries.length-1)
p=[1,2,3,...,m].
i=0
serializations
listnode
objects.)
(note
forward.
monotonic,
monotonic
num1,
num2.
(1-indexed),
paired
nums3.
(u2,
(u1,
v2),
(u,
v1),
(uk,
vk)
(sale_id,
product_name,
sale_id
year)
earner
seeing
company's
earns
executives
earners
positives
'r'.
'w',
'q',
balanced,
capital,
capitals
"leetcode".
"google".
"usa".
capitals,
usage
holds:
(cx,
radius.
function).
qi.
⌊val⌋
⌊qi
towers,
cy]
qi]
cy)
qualities
[cx,
garbled,
towers[i]
d)⌋,
quality,
towers
maximum.
towers.
tn+1
tn
tn+3
tribonacci
tn+2
t0
tn.
n-th
f(s)
f(queries[i])
"dcce"
f(w)
booleans,
objects,
object.keys().
object,
inludes
json.stringify
nums[i+1])
maxsum.
visit.
visit_date
increases,
visit_date,
stadium
human
id's,
iterator.hasnext()
nestedlist
flattened
tested
pseudocode:
nestediterator(list<nestedinteger>
nestedlist)
nestedlist.
nestediterator
iterator.next()
papers
citations[i]
h-index.
published
researcher's
paper,
researcher
h-index
cited
citations
island.
repetition.
k-length
[cityai,
citybi]
paths,
citybi.
cityai
therefore,
loop,
x-values,
points.length.
durationi]
continuous)
endi,
numbers[index2]
index2,
numbers.length.
numbers[index1]
index2]
[index1,
neighborhood
[{1},
{2,2},
houses,
{2},
houses[i]:
cost[i][j]:
neighborhoods.
{1,1}].
{3,3},
neighborhoods
[1,2,2,3,3,2,1,1]
yet.
built
maxheighti]
buildings:
maxheighti.
restrictions.
indices(0-indexed)
swaps.
0-height
prism.
blocks,
building).
increased.
randomizedset()
randomizedset
called).
(it's
getrandom
remove(int
stages:
basically,
updated)
well-performing
non-tiring
(strictly)
tiring
subdirectories,
subsubdir1.
dir
subsubdir1
subsubdir2
name.extension,
file1.ext
opened
"dir\n\tsubdir1\n\t\tfile1.ext\n\t\tsubsubdir1\n\tsubdir2\n\t\tsubsubdir2\n\t\t\tfile2.ext".
character):
file2.ext
subdir2
⟶
subdir2.
abstracted
subdir1
extension
format,
subdirectory
form,
'\t'
"dir/subdir2/subsubdir2/file2.ext".
looks
'/'s.
file2.ext.
here,
subsubdir2,
explained
picture:
directories.
new-line
'\n'
rowsum
colsum
fulfills
colsum[j]
rowsum[i]
colsum.length
rowsum.length
complementary
complementary.
arr[0].
encoded[i]
[1,0,2,1],
[1,2,3].
fancy
multiplies
addall,
append,
multall(m)
multall
addall(inc)
inc.
append(val)
fancy()
getindex(idx)
nums[0]),
circularly
traversing-order
yi],
single-level,
own,
curr
on,
curr.next
multilevel
completes
robot's
(up),
(down).
(left),
finishes
origin,
irrelevant.
(right),
magnitude
"facing"
subsequence's
reduced
fn(val,
reducer
fn(init,
init,
nums[2]),
array.reduce
nums[1]),
grid[xi][yi]
relevant
arms
mines[i]
unite
speedi]
cars[i]
fleet.
speeds
one-lane
simplicity,
meters.
car,
cars
speedi
collides
fleet
collide
positioni+1.
logins
2020
2020.
forest.
"how
you?"
rabbits.
rabbit.
rabbits
(c,
num2)
excellent
(num1,
garage
mechanics
mechanic
mechanic.
cars.
ranksi
mechanics.
distancethreshold.
edges'
distancethreshold,
comprising
oldi
[oldi,
mappings[i]
sub.
newi.
newi]
mappings
mappings.
increments,
matrices
90-degree
orderedstream(int
(idkey,
idkey,
stream,
orderedstream
(list)
idkey
figures
center.
touches
slices.
attending.
times[i]
leavingi],
chair
leave.
[arrivali,
targetfriend
comes,
chairs
arrives
targetfriend.
chair.
infinity.
signal.
(ui,
wi),
signal,
wi
segment.
removequeries[i]
removequeries,
'_',
underscore
dash
e-mails
e-mail
'@leetcode.com'.
(upper
emails.
k-distant
tomatoslices
cheeseslices
ingredients
cheeseslices.
total_small]
slice.
burgers
waste
burger:
jumbo
tomato
[total_jumbo,
cheese
time-points
allone()
dec(string
counts.
getminkey()
allone
decrement.
decrement,
count.
decrements
inc(string
strings'
o`one
getmaxkey()
structure,
converting,
10)
o(log(n))
add,
comparatively
situation.
comparing
skiplist()
idea
by-sa
wikimedia
skiplist
o(n).
kalinin
[cc
skiplist:
faster
performance,
commons
3.0],
search.
erase(int
skiplist,
treap
red-black
[30,40,50,60,70,90]
search(int
layers
fine.
skiplists
skiplist.
artyom
https://en.wikipedia.org/wiki/skip_list
prefixes
hold.
baskets,
fruit.
strict
fruits,
produces.
farm
owner
chargetimes
max(chargetimes)
charge
sum(runningcosts),
runningcosts,
chargetimes[i]
sum(runningcosts)
budget.
runningcosts[i]
cooldown
restrictions:
plots,
plot,
rowcosts
rowcosts[r].
colcosts[c].
home
(homerow,
homecol]
homepos
homecoming
[homerow,
home.
incurs
colcosts
homecol).
perm[i].
root1
root2.
overlapped
shop,
prices[j]
columns)
(k
separates
column),
battleship
battleships
battleships).
rows,
uncommon
single-space
odd-length
collects.
((r,
n-1),
c)).
traversed
people[3].
people[0],
project,
req_skills,
team:
skill.
sufficient
people[1],
spread.
"cba"
"abca"
"abacba"
word.length
"bcfd"
max(nums[2
newnums.
newnums[i]
newnums
i],
min(nums[2
y|.
|x
(bst).
corridor,
decorative
dividers
sections,
corridor
installed.
divider
corridor.
continuous,
continuous.
hasapple[i]
apples
apple.
apple;
hasapple,
["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"].
(id,
month)
revenue
happy.
endlessly
stay),
loops
k1,
nums[(i
k2
buffer
k1
feedback,
student_id,
reports,
negative_feedback,
report[i].
reward
higher.
positive_feedback
feedback
student_id[i]
senders[i].
sender
messages[i]
count,
chat
sender.
senders
nums2[i])2
(nums1[i]
k2.
1337
pow
extremely
a[2]
ie.
a[4]
a[3]
a[1]
a[0]
[3,2,7,7,1,2]
hiring
[3,2,7,7,1,2].
[3,2,7,7,2].
<num2>
<num1>
yield
"<num1>+<num2>"
subarray).
[nums[l],
nums[r]]
nums[r
nums[l
(l
img
smoother
nine
surrounding
rounding
grayscale
smoother).
stores:
product's
store2,
store3.
store1
store3
store2
store's
store1,
price).
arr2[j].
arr2.length
chalkboard.
chalkboard
...].
$30000
(manager_id
null).
manager_id
neighbors;
unordered
(int)
(clone)
finite
(list[node])
list<node>
non-prime.
non-prime
minlength.
partitions
parameter
taxrate);
enhance
salad
callpolyfill
undefined
appropriately
taxrate)
const
function.call
0.1)
tax(price,
"salad"},
tax(10,
${totalcost}`);
totalcost
${this.item}
11".
obj
defined.
console.log(`the
tax.callpolyfill({item:
"the
four,
4x.
(a)
(b)
carefully).
explanation
(),
random,
(please
[b]
[a]
balls[i]
emails,
supposed
show
script,
compile
email.
groups[i]
groups).
constrained
file.txt
one-liner
xxx-xxxx
(xxx)
script
xxx-xxx-xxxx.
line),
digit)
bash
spot.
values[j]
spots,
spots
sightseeing
spots.
hand.
degrees)
neededtime[i]
neededtime
rope.
colorful.
colorful
rope
balloon.
help.
"ababc",
"ab".
winston
func
target|
mysterious
target|.
|func(arr,
func.
neg.
pos
neg,
contiguous.
parents
-231,
−
[−231,
divisor.
dealing
dividend
losing
range:
-231.
quotient
fractional
truncated
-2.7335
8.345
(n-1-i)th
twin
twin.
twins
[1,2,1,2,4,1,5,10].
-9]
[7,
[2,5,10]
directioni].
'z').
directioni
"00",
"1".
"0").
exception
["0",
"001"
"001",
"1"],
sub-arrays
widest
fixed-width
infinitely
y-axis
height).
width.
conver[i]
conver
nums[0..i].
max(arr[0..i])
[aj,
cycle.
x3
xk
aj
bj.
bj]
toeplitz.
toeplitz
consistent
asteroid.
asteroids,
destroyed
gains
destroyed.
destroying
planet.
planet
asteroids[i]
king.
yqueeni]
yking]
[xking,
queens[i]
[xqueeni,
ad
approved
trans_date
amount.
incoming
["approved",
"declined"].
milestone
milestones
projects
milestones[i]
project.
project
week,
working.
project's
finished,
violate
weeks
week.
weeks.
rules,
donut
donuts
donut.
served
batchsize.
serving
batches
bakes
batchsize
donuts.
batch.
height[i][j]
touching).
iswater
j)'s
former
latter
iswater[i][j]
non-negative.
arrivali
prepares
customers[i]
chef.
timei]:
prepare
chef
effect:
voyage.
voyage,
[-1].
uniquely
floors,
floor.
manages
relaxation.
rented
relaxation
,'z'
score[0],
(might
repeating)
score[1],
necessary
(words[i]
score[25]
determined.
minimal.
(well-formed)
popatstack(int
dinnerplates
dinnerplates(int
dinner
insert(string
mapsum
existed,
mapsum()
sum(string
prefix)
key-val
pairs'
overridden
far.
findmedian()
medianfinder()
[2,3],
medianfinder
away.
lets
remaining.
thrown
row),
order_date.
february
+------------------+---------+
product_category
nums[d],
prefix,
j's
"3456"
"0190"
s:
'5'
"6345".
cycled
"3951".
"0158"
uninfected.
infection
infected.
minsize
maxsize
maxletters.
[5,6,7].
[5,2,4,7].
toppingcosts,
toppingcosts[i]
toppings
basecosts[i]
basecosts,
topping.
dessert.
dessert
flavors
dessert:
topping
ingredients.
inputs:
flavor.
assume:
words.txt.
words.txt
sake,
kthlargest(int
kthlargest
"cows",
info:
"xayb",
cows
bulls.
bulls
guess.
cows.
hint
non-bull
"bulls",
ask
ab,
[c],
']'.
"aeoiu",
"uaeio",
beautiful,
'e's,
"aeiou"
'i's,
vowels,
'e's
"aaaeeeooo"
'a's
"aaaaaaeiiiioou"
**
sqrt(x)
exponent
0.5)
python.
stone's
alicevalues
bobvalues.
bobvalues[i]
differently.
alicevalues[i]
other's
draw,
flowers,
bouquet,
bloomday,
bouquets
bloomday[i]
bouquets.
bouquet.
rescue
princess.
valiant
fight
drops
rooms;
imprisoned
laid
integers).
imprisoned.
princess
knight's
rightward
integers),
threats
quickly
decides
power-ups,
demons
orbs
dungeon
health
dungeon.
'1'.
bigger
perform.
out-of-order
dept_id)
dept_id.
dept_id
(subject_id,
teaches
subject_id
taught
teacher_id
size-5
packages[i]
size-3
package.
size-4
boxes.
[4,8],
supplier
supply).
packaging
size-8.
size-2
boxes[j]
packages,
suppliers
(4-2)
(4-3)
(8-5)
"ll"
"hellooo",
applications
same:
stretchy.
"oo"
"hi"
"ll",
"lllll"
"heeellooo",
feeling.
expressive
"ooo".
"heeellooo"
"hellooo"
"hiiii"
sometimes
"helllllooo",
"o"
"h",
"helloo"
"helllllooo".
stretchy
"helllllooo"
rj]
yj,
yj)
queries[j],
rj.
(a,b)
optimally
2+3,
(2,3),
4+4)
(1,5),
(4,4),
max(6,
pair,
pairing
max(1+5,
x-matrix
x-matrix.
non-zero.
hands.
switch
3),
row[i]
couples
couple
(2n
scores[i]
count[k]
maximum,
statistics:
mean,
[minimum,
sample
255].
minimum:
mode:
mode].
statistics
mean:
sample,
sample.
median,
maximum:
median:
--x
++x
x--
x:
x++
9001
formats
"com",
"rep
cpdomains,
subdomain
"9001
"discuss.leetcode.com"
discuss.leetcode.com
"discuss.leetcode.com",
count-paired
d1.d2.d3"
discuss.leetcode.com"
"com"
rep
domains
d1.d2.d3
subdomains.
"discuss.leetcode.com".
d1.d2"
implicitly.
everywhere
course,
swim
swim.
"faced",
"cabbage",
"based"
(does
"abcdefg",
(includes
"baggage",
"beefed"
puzzles[i].
puzzle).
query(int
majoritychecker(int[]
efficiently
threshold)
majoritychecker
arr)
y]
xy
coordinates[i]
y],
sumsecond
sumsecond.
sumfirst.
sumfirst
quantity[i]
quantity,
chars.
chars
accepts.
justification
maxwidth,
greedy
approach;
left-justified,
justified.
maxwidth.
maxwidth
pad
pack
nums[j
colori].
[indexi,
indexi
colori
(has
strongest
[-7,
[6,
((n
((5
11],
22,
stronger
((4
11]
m|,
[-3,
arr[m]
22]
s[i])
shift('a',
shift(s[i-1],
s[i]).
x),
shift('x',
shift(c,
ycenter)
(radius,
xcenter,
y2),
brokenletters
properly.
malfunctioning
spaces)
great
loses.
chalkboard,
grid[row][col]th
illustrates
configuration,
visited.
tour
you:
moment.
cherries.
#1
#2
weld
installation.
billboard
welded
supports,
steel
billboard,
rods
quadruplet
quadruplets.
nums[l].
monkeys
monkey
monkey.
collisions
list2.
list1[i]
list2[j]
list2,
arr[1]).
rightchild[i],
leftchild[i]
bi).
ai,
coins,
coin.
denominations
�
yellow,
color).
colors:
pseudo-palindromic
garbage,
responsible
truck
driving
trucks
travel[i]
'm',
'g'
metal,
garbage
assortment
order;
garbage.
garbage[i]
paper
01:30.
midnight
00:15,
clock.
logouttime.
logout
00:45,
starts.
logintime,
23:45.
logintime
seventh
logouttime
pos2x
pos1z
pos2z.
pos1v
pos2v
pos1x
pos1y
pos2y
accepted,
val);
...;
in-place.
things:
actuallength;
equaling
sort(nums,
removeelement(nums,
k);
important
unique_id
employeeuni
unique_id)
identifier
stashed,
stopping
systems
appeal
"abbca"
nums.length),
afterward.
(bitwise-xor)
1000,
"0090089"
["0090",
[90,89].
"01"],
[0,1],
["00",
[0,0,1]
"1"].
"089"]
m]
=="abcabcabc".
str1
[s1,
n1
repetitions
str1.
n2].
[s,
str
[s2,
bolded
"abdbec"
str2
n1]
[str2,
charge.the
speed[i]
loss,
eliminate
weapon
monsters
monster.
defending
weapon.
monster
charged
monsters.
lose,
charged,
build,
"+2-1".
horizontal/vertical
c).
n-2)
n*n
c+1)
(n-1,
c+1).
heaviest
rearrangements
reordering
(right
node;
exams.
score[i][j]
mirrors
reflection
corners,
southwest
ray
receptors
receptor
receptor.
eventually.
holes
ranks.
ranking.
[word1,
wordk]
word3,
"abac",
predecessor
wordb
worda
"bcad".
wordb.
root2,
sub-arrays,
stockprices[i]
chart
dayi
stockprices
chart.
plotting
[dayi,
cj
dj]
?.
dj
contradiction.
[cj,
-1.0.
determined,
values[i].
counted.
"1|(0&(1))"
operator),'(',
"(((1))|(0))",
1|0&1
1&1
operator),'|'
'&'
expressions.
"()1|1"
'|'.
"1|1|(0&0)&1",
"(1)&()"
'1','0','&'
1|1|(0&0)&1
1|1|0&1
'&'.
enddayi,
attending
[creatori,
views
ids,
platform
creator,
popularity,
video.
views,
creator[i],
views.
creator's
popularity
views[i]
creator
popular
creatori
idi]
creators
ids[i],
transpose
switching
diagonal,
grain
shape,
wood
wi,
pricei
wood.
wood,
cutting
beautyi]
queries[j].
104
numerator
repeating,
fraction,
parentheses.
denominator
enclose
recurring
illuminated
colj].
grid[rowi][coli]
illumination
grid[rowj][colj].
illuminates
answering
ans,
lamps
lamps,
lamp
illuminated,
grid[rowj][colj]
lamps[i]
seating
favorite[i]
organizing
favorite,
invited.
capable
invited
allowedswaps
source.
n-1
allowedswaps[i]
2*2
2*3,
4]:
[4]
"aebdc"
"aeb",
"aebdc",
bitwise-or
or.
edgelist[i]
disi]
[pj,
qj,
limitj],
qj
edgelist,
pj
disi.
existence
belonged
remembers
higher[i]
higher,
lower[i]
unique,
s4
inverts
"0111001"
reverse(invert(si
invert(x)
reverse(x)
"011100110110001"
sn.
d).
nums[x])
(5,
(c
nums[z])
(nums[y],
16.
(nums[w],
7)
w,
folder).
folder.
"../"
"x/"
crawler
exist).
folder,
"./"
named
arr[x]
-=1
arr[y]
?'s
conversions
names,
names[i]
heights.
people's
goal).
abs(sum
trimmed([3,1,2,4,3,4])
trimmed(subarray)
[1,2,3,3,3,4,4],
[3,3,3,4,4].the
[3,4,3,4].
trimmed(subarray).length.
trimmed([1,2,3,3,3,4,4])
revisit
undirected,
terminates:
linked-list
lists,
eventual
graph[i].
states
terminal
node).
vj,
timej]
sum).
maxtime.
timej
error
calculation
(nums[i-1]
xoring
((nums[i]
xor-beauty
nums[k]).
screen
paste:
paste
screen.
all:
notepad.
notepad
operations.)
minima
head,
[mindistance,
mindistance
maxima
minima.
maxima/minima
maxdistance]
dominoes[i]
forces.
sides,
upright.
purposes
dominoes
fallen
expends
pushed.
"pahnaplsiigyir"
convert(string
"paypalishiring"
font
legibility)
numrows);
g
labels[i]
numwanted.
uselimit
uselimit.
numwanted
c[i]
engineers'
performance.
efficiency[i]
engineers
engineer
performance
engineers.
analyze
visited_on
average_amount
(customer_id,
visited_on)
before).
(customer_id)
serializes
clarification:
approaches
creative
yourself.
bij
sized
nums[i...j].
max(bik)
pins
bowling
2xi
player1
player2,
xi.
"aab",
frequency.
fewest
grid[row][col].
cmove
rmove
black),
vertical,
(white
diagonal).
(rmove,
cmove)
black).
endpoints)
free).
(horizontal,
"rxxlrxrxl",
"rx"
"xl"
lr
"xr".
"lx",
decided.
paired.
played,
tournament,
advance
aacabb
bbcbaa
close,
abcde
b's,
a's)
aecdb
nums[k]]
parameter.
cycle,
internally,
tail's
begins.
o(nlog(n))
maxoperations
maxoperations.
nums[j]|,
preferences[i]
unhappy
preference.
unhappy.
but:
preferences
v.
hills
valley,
valley
valleys
hill
elapsed.
14
sent.
"bob",
pressedkeys
transmission,
phone.
texts
"2266622".
'7'
'k',
texting
's',
abbreviated
1234567654321
abbreviate
"<pre>...<suf>ec".
1234567
1234567.
12345678987600000
<pre>
abbreviating
<suf>
546.
"12345...89876e5".
<pre>...<suf>
12345...54321,
subset's
incompatibility
incompatibilities
p2
"(())()",
nonempty
decomposition:
pk,
outermost
"(()(()))"
primitive
p1
"()",
concatenation.
nonempty,
zuma
turn:
zuma.
zuma,
'w'.
variation
side-length
definition:
multiset,
linearly
randomizedcollection
multiset
randomizedcollection()
multiset).
randomizedcollection.
reporting
pivot.
pivot,
pj.
maintained.
computers
battery
computers.
batteries[i]
batteries.
recharged.
batteries
computer.
customfunction,
interface
f(x,y)
findsolution
callable
y);
with),
};
i.e.:
f(x,
function_id
z.
implementations
z,
monotonically
public:
f(int
f(x
customfunction
no-zero
well-formed
throughout
parent.
diff,
"t
str2.
s"
str2,
sea
(4-directionally)
enclaves
"a2bc3".
"aabccc"
run).
(repeated
compression
compress
(length
"c3".
"a2"
land)
(representing
vertical.)
sudoku
(partially
filled)
solvable.
validated
sub-boxes
collided.
motion.
involved
collision,
directions[i]
24,
12"
9].
"12
1"
"-1
['+',
'/'
'/']
24.
12.
superstring
cur's
cur
root's
depth,
to_delete,
trees).
"cdefab",
"efabcd",
["ab","cd","ef"],
"efcdab"
"acdbef"
concatenated.
"abcdef",
"cdabef",
"abefcd",
rental
for,
shopi
booking,
renting
[shopi,
moviej]
report:
moviej
shops
entries.
id)
searching
list<list<integer>>
generating
drop(int
movierentingsystem
[shopj,
rent:
drop:
report()
rents
movie.
search:
movies,
movierentingsystem(int
shopj.
entries[i]
moviei.
rent
shopj
entries)
movies.
shops,
rented,
res[j]
shops.
copy,
unrented
moviei
moviei,
rent(int
movie)
searches
yielding
encounters
encounters.
multi-dimensional
user_id)
register
registered
decimals.
(contest_id,
contest_id
user_name
order_number
+-----------------+----------+
customer_number
isconnected
province
isconnected[i][j]
provinces
provinces.
reformatted
license
formatting
magicdictionary()
searchword)
search(string
magicdictionary
builddict(string[]
weak
properties[i]
[attacki,
defense.
defensej
attackj
defensei]
defensei.
defense
character's
attacki
productofnumbers
getproduct(int
overflowing.
productofnumbers()
article
viewer_id
view_date
(written
articles.
author)
author_id
viewer
authors
article_id
philosophers'
philosopher,
putrightfork)
discipline
eat,
forks.
putleftfork
pickrightfork
thinking
silent
space;
algorithm)
number).
putleftfork,
pickrightfork,
wantstoeat(philosopher,
think.
concurrent
asking
eating,
pickleftfork,
spaghetti.
demand
threads,
putrightfork
philosopher.
assumed.
spaghetti
starve;
stomach
fork
wikipedia.org
philosopher
thinking,
behaviour
bowls
think
forks
philosophers.
philosophers
dining
pickleftfork
barcodes
barcodes,
barcode
barcodes[i].
distant
"abcdefghijklmnopqrstuvwxyz".
"za"
"acb"
min(i,
jumping.
max(i,
j)).
master.guess
allowedguesses
guesses.
position)
long.
word."
method).
correctly."
"either
six-letter-long
(value
helper
bruteforce
reasonable
get:
allowedguesses.
master.guess(word).
"you
(other
master.guess(word)
master.
wrap-around
caused
generation.
reproduction.
article):
wikipedia's
deaths
life
dies,
under-population.
cellular
state:
devised
conway
(taken
state,
diagonal)
life,
wikipedia
article:
over-population.
mathematician
horton
lives
john
automaton
interacts
1970."
british
births
incident(a,
answers[j]
answers.length
nearly
heater's
winter
heaters
contest,
standard,
warm
warmed,
coming!
heater
deviation
[1,2,3,2].
[2,2,3,4].
languages[i]
languages
teach
transitive,
users,
friendships[i]
teach.
friendships
friendship
knows,
testing:
input,
diagonals.
secondary
maxpts
probabilities.
loosely
plays
"21".
maxpts],
draws
outcomes
stick,
explanation.
cut,
cuts.
wish.
cut).
cuts[i]
(go
1-indexed.
"hhhvv"
'h',
"hvhvh"
destination:
'v',
providing
"(13)"
"(205)".
been.
zeroes,
"1.0",
0.5)".
extraneous
ambiguous
"(2,
"0.0",
"00.01",
(occurring
3)"
".1".
"(1,
0.5)"
comma.)
"0.00",
24-hours
arrivaltime
delayedtime
(alphanumeric
sets;
molecules.
molecule
barrier.
words:
bind
thread.
worry
synchronization
barrier
hydrogen.
enforces
releaseoxygen
explicitly;
releasehydrogen
hydrogen
h2o
barriers
molecule.
oxygen
with.
bond
molecules
do.
smallestinfiniteset()
addback(int
popsmallest()
smallestinfiniteset
leaf-similar
leaf-similar.
root2
images,
img1
translate
borders
erased.
translation
img2,
translated
sold.
end_date.
product_id.
end_date
start_date
start_date,
intersecting
end_date)
purchase_date
average_price
unitssold
sequence).
(p),
wildcard
(s)
length-3
forwards
backwards.
modifications
fixed-length
written.
cards[i]
biginteger).
unreachable
orderly
string..
position[i],
force.
c-137,
magnetic
earth
rick
universe
discovered
invented
morty
stated
50,
$500
banknotescount)
deposit
deposits
$100
[-1]
banknote,
$20,
banknotes.
$200,
banknote
$500.
banknote.
atm()
$200
withdrawing,
$50,
withdraw
$50
200,
$100,
rejected
withdraw(int
$600
atm
$100.
handed
case).
banknotes
(do
prioritizes
withdrawing.
banknotes,
deposit(int[]
$500,
$300
denominations:
ancestors.
ways.
oriented
return:
trie.
word)
trie
startswith(string
(pronounced
autocomplete
dataset
spellchecker.
before),
(prefix
trie()
"try")
sorts
pancake
[3,2,1,4]
k-values
[3,2,1],
arr[0...k-1]
linked-list.
l1
…
l2
→
l0
ln
code[n-1].
informer
bomb!
defuse
defuse,
code[n-1]
code[0]
code[0],
out!
splicing
√(x1
(y1
y2)2).
in).
x2)2
3a
encoded_string
k[encoded_string],
105.
valid;
2[4].
well-formed,
numslots.
slot
slots.
numslots
u)
o,
e,
array),
do,
working
(project_id,
employee_id)
project_id.
project_id
experience_years
[1,3,4]
competitive
exchanges
swap.
distinct),
pizza
pizzas.
slice
abs(y1
x2)
abs(x1
grid:
y2).
zeroevenodd(int
printnumber
zeroevenodd
even(printnumber)
c:
"010203040506..."
even()
2n.
zero(printnumber)
a:
prints
console.
printnumber(7)
odd(printnumber)
odd()
zero()
after.
[2,1,4,3]
[4,1,2,3]
[4,3,2,1]
stone),
review
rated
created_at
movierating
movie_id
(movie_id,
review.
considered.
arr.length,
one-bit
1-bit
2-bit
11).
(10
hasfrequency(int
frequency):
deleteone(int
frequencytracker
frequencytracker():
regarding
frequencies.
number):
boundary).
maxmove,
startcolumn,
startcolumn].
startrow,
maxmove
(water),
'1's
peaks,
peaks.
nums[-1]
-∞.
nums[n]
app.
tweet_id
tweets.
leftover
k-beauty
supersequence
(obstacle).
maintaining
divisor2.
divisor1.
uniquecnt2
uniquecnt1,
uniquecnt2,
uniquecnt1
divisor2,
divisor1,
arr2.
robot(int
getdir()
("north",
facing.
"west").
"north",
"south",
instruction.
getpos()
awaits
bounds,
"west".
instructs
"east".
following.
height)
retries
step(int
(width
"east",
'b').
rings:
rod
"r3g2b1"
rings
'9').
color-position
rods.
('r',
"!@#$%^&*()-+".
violates
"aab"
[3,2,5]
min-product
20.
(3+2+5)
selected.
5%
paper.
endi-1
pairs.length,
"ca",
si.
"abaca",
"aca",
sn).
indexed.
item).
dependencies
beforeitems[i]
rangefreqquery(int[]
arr[left...right].
rangefreqquery
subtrees,
(xi2,
[xi1,
rectangle[i]
yi2)
yi1,
(xi1,
yi1)
yi2]
xi2,
sets.
[3,7],
[1,2,4,7,8,9]
[2,3,4,8,9]
[[1,3],
[8,9]],
disconnected
recipes[i],
recipes.
supplies
recipes
ingredients[i].
recipes,
ingredients[i]
recipe
logarithmic
mountain.
pref,
wordfilter(string[]
suff.
suff)
wordfilter
f(string
palindromic.
2).
(0-based)
strongest.
civilians).
civilians.
soldiers)
weaker
mid
(ie.,
labelling
fifth,...),
third,
label.
fourth,
(second,
sixth,...),
(unrevealed)
revealed:
deck[i].
deck,
deck.
entry
reveal
[4,5,6,7,0,1,2]
forts
min(i,j)
fort
forts[i]
max(i,j),
army,
forts.
captured.
forts[k]
projects.
ipo.
soon.
venture
resources,
profits[i]
ipo
capital[i]
capital.
pure
connections.
computers,
ethernet
cables
[x1,y1,x2,y2,...,xn,yn].
[x1,x2,...,xn,y1,y2,...,yn].
formula:
countandsay(1)
saying
"say"
count-and-say
countandsay(n)
"3322251":
countandsay(n-1),
xy-plane,
sy]
[sx,
blocked[i]
[tx,
ty]
max(nums[i0],
heroes
,nums[ik])2
,nums[ik]).
nums[i1],
,ik
heroes.
min(nums[i0],
path[i]
picked.
num),
guess(int
pick).
pre-defined
results:
0:
wrong,
abs
dominoes[j]
dominoes.length,
dominoes[j].
d),
quadtree2
quadtree2.
matrixes
grids
quad-trees
logical
quadtree1
cases,
"00010"
"00001"
"10010"
"10",
"10".
"01".
y's
features:
operator,
string()
wrapper
comma
arraywrapper
dialer
indicated
diagaram:
dial.
movement,
l).
reversed2.
reversed1
retained.
reversed2
2021
321
1202.
reversal
reversed1,
12300
abs(c1
points[r][c]
"/leetcode"
folder[i]
filesystem
folder[j],
sub-folder
folders.
sub-folders
"/"
"/leetcode/problems"
'2'
......".
......"
2's
"1221121221221121122……".
hourglass.
hourglass
"1001"
plot.
apple
neededapples,
|j|
neededapples
|i|
multiplicand.
[3,6].
"yy".
end],
"xxxx",
"abbxxxxzyy"
identified
"z",
"bb",
ransomnote.
ransomnote
magazine,
magazine
ransom
[2,1].
terms,
practical
csum(1,2,3).
csum(1,2)(3),
csum(1)(2)(3),
curried
csum(1)(2,3),
curry
sum(1,2,3),
"/b/x"
level)
marked,
/a/z
/b/x/y
"three"]
/a/x/y
"/b/w",
/a
"/one/two/three".
subfolder
/a/x
marked:
subfolders)
["one",
"/a/x"
"/a"
subfolders
subfolders.
/b/z
bug,
identical.
"two",
underlying
/b
/b/x
"/b"
encodedtext,
filled.
accessed.
slanted
originaltext
transposition
"cipher"
ie
encodedtext
"ch
ciphertext
depict
fashion.
pr".
originaltext.
experience,
initialexperience
opponents.
experience[i]
opponent
defeating
energy[i].
experience[i],
energy[i]
defeat
training,
initialenergy
competition,
opponent,
index[i],
index[i]
you're
jewels.
jewels,
jewels
sensitive,
evenly.
streets.
upper-left
indirect.
vj].
subexprn
'|(subexpr1,
parsing
subexpr.
subexprn)'
subexpr2,
'!(subexpr)'
subexpr1,
inner
'&(subexpr1,
shapes:
ch,
"d",
"dcbaefd".
ch
"abcdefd"
sticker
stickers.
stickers
sticker.
(0,1,2.....,2^n
p[2^n
p[i+1]
-1)
p[i]
p[0]
thief
tour,
directly-linked
thievery
himself
selection.
insufficient
potentially
tokens[i]
power,
tokens[i],
gaining
nums1.length,
valid)
snippet
cdata
<tag_name>tag_content</tag_name>.
<![cdata[
tag_name
tag_name.
note1)
nested.
</,
tag.
tag_name,
upper-case
validator
cdata_content
unmatched
</tag_name>
issue
tag_content
invalid),
tag,
unbalanced
tags,
[1,9].
wrapped
]]>.
<,
<![cdata[cdata_content]]>.
<tag_name>
forbid
cdata_content,
snippet,
tags
"2/3/4".
priority
parenthesis.
'('.
forbidden,
forbidden[i]
forbidden[i],
bug's
home,
bug
forbidden
hand[i]
straights
groupsize
groupsize,
histogram.
histogram's
histogram
pictorial
routine
minutes:
thereafter,
sum(|nums[i]-nums[j]|)
multipliers[0]
multipliers
multipliers[i]
multipliers[1]
addword(word)
worddictionary()
search(word)
worddictionary
shifts.
fancy.
subsequence1
constructed,
subsequences:
subsequence2
subsequence2,
perpendicular
point)
detectsquares()
detectsquares
count(int[]
add(int[]
left/right.
less-than-or-equal-to
(exclusive)
fractions
solver
3x3
willing
going,
tipi
dollar
earnings
tip.
taxi.
tipi]
requesting
rides[i]
rides,
arr1.
cells).
horizontally/vertically
isn't
diagonally).
"lakes",
rectangular,
x!
f(11)
convention,
preimage
0!
11!
39916800
x!.
3!
f(3)
cash
price/reward
open,
gate
bob.
reward.
gate.
amount[i]
sleft
s)
sright
"110100010"
whitespaces
k]
s(i,
day?
favoritetypei
eaten
candiescount[i]
favoritedayi
dailycapi
favoritedayi,
candiescount
dailycapi].
[favoritetypei,
z1,
z0
zi
distancetolastnode(zi+1)
zk
zi+1
k-1.
distancetolastnode(zi)
z2,
[z0,
distancetolastnode(x)
zk]
board;
'!'
them.)
board[0][0].
"fghij",
moves:
"pqrst",
"klmno",
["abcde",
"uvwxy",
"z"],
circles[i]
lattice
circles
step-by-step
destvalue
playlists
music
played.
listen
playlist
boredom,
songs.
alive
deathi
die.
population.
[birthi,
deathi]
mink
maxk.
mink.
fixed-bound
repeat.
wraps
dth
subset,
defanged
defanging
(ipv4)
"[.]".
unsigned
32
compiler
notation.
implementation,
unsigned.
java,
seatmanager(int
unreserve(int
unreserves
reservation
reserves
unreserved
seatnumber)
smallest-numbered
manage
seatmanager
seatnumber.
reserve()
fetches
ki].
replacement,
grumpy.
bookstore
grumpy
technique
grumpy,
satisfied
grumpy[i]
satisfied,
k-bit
highlimit
lowlimit
highlimit,
length(word[j])
length(word[i])
method,
gcd(nums[i],
asuffix,
aprefix
"bc",
bsuffix.
sprefix
splits.
asuffix
ssuffix
bprefix
ssuffix,
bsuffix
defined:
[1,9],
[3,3,3].
[4,5,7],
ix
turn).
tiles,
otherwise:
touching
cubic
storeroom
cube
boxes:
slow
position).
hour).
bumper
slower
fleets
ignored
catches
decompress
sublist.
[nums[2*i],
encoding.
sublists
nums[2*i+1]]
decompressed
[freq,
reflexivity:
relation:
equivalence
transitivity:
implies
basestr.
basestr
"cde",
"eed",
symmetry:
s2[i]
"acd"
equivalency
nums1:
found.
conductor,
goods.
illegal
rid
s[s.length
s[0])
goods
almost
odd].
[even,
chars,
chars:
separately,
group's
selects
mutated
neccesarilly
difference)
jobs,
devise
jobs[i]
assignment.
job.
introverts
living
(introvert
extroverts
120
happiness
extrovert).
happiness.
extroverts.
extrovertscount.
people:
introvertscount,
extrovertscount
introvertscount
26.
vals[i].
numsl+1,
numsi+1.
numsr]
[numsl,
numsi
numsr-1,
ascending.
"cabxe".
"ba"
"cabxbae"
"cxbae".
nodes:
fizzbuzz(printfizzbuzz)
number()
...]
buzz(printbuzz)
multithreaded
"fizz".
fizz,
fizzbuzz
fizz()
number(printnumber)
fizz(printfizz)
d:
"fizzbuzz".
"fizz",
printbuzz
printfizzbuzz
printfizz
"buzz",
buzz,
fizzbuzz()
"buzz".
console,
fizzbuzz(int
buzz()
[3,6,2,7]
[0,3,1,6,2,2,7].
'u').
alike.
alike
polish
operand
notation
truncates
shortest.
signs
1][j])
cell)
apple)
horizontal,
words.length.
reverse,
[vali,
indexi].
nums[indexi]
vali,
assorted
denominations.
wallet
wallet.
treeancestor(int
treeancestor
parent)
ancestor,
getkthancestor(int
considered,
subtree,
children;
unlocks,
1440.
out_time
event_day,
emp_id
(emp_id,
out_time.
event_day
in_time.
in_time
exits
happened,
in_time)
employees'
typei
edges:
traversable
ui,
influence
totaltrips,
operates
successively;
independently;
totaltrips
grass,
grass
stayed,
fire,
field.
safehouse
fire
safely
safehouse.
endpos.
startpos,
endpos
lower.
colsum[i],
column(0-indexed)
2-row
1-st(lower)
upper.
0-th(upper)
colsum.
automate
withdrawn
(transfer,
account2,
account,
balance.
withdraw).
balance,
transfer(int
account1,
number(s)
money)
deposit(int
balance)
balance[i].
account2.
account1
deposit,
bank(long[]
j|.
49
1549.
numerals.
score's
(poor
loses),
|3
5|
powered
sanctioned
pre-existing
stations,
government
10|
|7
100));
generator.
50);
"cancelled"
2));
1;
object).
resolved
promises.
done.
caught,
settimeout(resolve,
promise(resolve
cancel
t=100ms,
[cancel,
function*
completes.
cancel()
tasks()
throw
resolve(2
responsibility
yielded
promise]
cancellable(tasks());
rejects,
t=50ms
cancellable
promise.
settimeout(cancel,
promise.catch(console.log);
=>
advance.
costs[0]
costs[2]
dollars,
365.
7-day
30-day
costs[1]
planned
days:
1-day
duplicates).
centennial
safely.
scenario
gondolas
wheel,
gondola
gondola,
counterclockwise,
gondola.
runningcost
profit.
arrive.
gondolas,
boardingcost
boxtypes[i]
numberofunitsperboxi]:
truck.
numberofunitsperboxi
[numberofboxesi,
numberofboxesi
trucksize,
trucksize.
boxtypes,
[[3,
exam,
5]]:
brainpower
decision
pointsi
brainpoweri
questions[i]
[pointsi,
brainpoweri].
i|.
[0,1,5,6]
a[j],
[0,1,9,0]
|j
obj2.
differences.
obj2
[obj1
identify
obj1
value].
vertical).
grid2
sub-island
grid2.
land).
sub-islands.
water)
grid1
(ranging
lane
sideway
obstacles[2]
obstacles,
lanes
lane.
adjacent)
marathon
rounds[i
rounds[i].
circulate
track,
sectors
rounds[0]
rounds[1]
sector
[4,6,16]
gcds
wikipedia,
prevroom[0]
colony.
built.
colony
prevroom,
prevroom[i]
built,
even-odd
even-odd,
blueedges
rededges[i]
blueedges[j]
self-edges
rededges
answer[x]
25,
cyclic.
graph[u],
undirected).
bipartite
(graph[u]
bipartite?
graph[v]
bipartite.
graph[u]
u).
hexadecimal
two’s
bi].
matchsticks[i]
matchstick.
matchsticks
matchstick
10n.
integer-sided
insertions
"(())())))"
")()",
"())(())))"
"())",
'))'
'))'.
"()))"
and,
ping
3000,
[t
recentcounter
3000
call.
ping(int
recentcounter()
request).
t].
weight).
arr[i],
ceiling
ceil(val)
ceil(nums[i]
3).
passi
ratios
extrastudents.
totali
students,
classes[i]
[passi,
classes,
extrastudents
totali].
brilliant
assigning
beforehand
class,
classes.
initializing
(bst):
bstiterator
non-existent
bstiterator(treenode
weights.
-1),
(wi
109]
ones)
unmodified
0011,
1101
2p
representations.
1111
0001.
emitter
emit
eventemitter
unsubscribe
enables
emitted.
callback(s).
unsubscribe.
subscribing
subscribe
callbacks
called,
dom.
callbacks,
subscribed.
arguments:
referentially
optional
emitting
subscribed
listeners
subscriptions
node.js
differences)
customstack(int
inc(int
maxsize.
maxsize)
customstack
pops
well-spaced
distance[i].
zeroscolj
onescolj.
zerosrowi.
zerosrowi
onesrowi
diff[i][j]
zeroscolj.
onesrowi.
onescolj
"x1.x2.x3.x4"
"neither"
"192.168.01.1",
"ipv4"
"2001:0db8:85a3::8a2e:037j:7334"
"2001:db8:85a3:0:0:8a2e:0370:7334"
'f')
ipv4
"192.168.1.00",
"x1:x2:x3:x4:x5:x6:x7:x8"
"192.168.1.0"
xi.length
ipv6
"02001:0db8:85a3:0000:0000:8a2e:0370:7334"
queryip,
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
"ipv6"
richer[i]
quiet[y])
quietness
quiet[i]
rich
loud
richer
quietness.
situation
quiet
logically
pruning
(rcenter,
c2|.
rcenter,
|r1
cols,
|c1
r2|
ccenter)
ccenter.
ccenter).
min(b),
like-time
dishes.
reducing
preparation.
dish
discard
dishes
satisfaction[i].
satisfaction
prepared
ranges,
exactly.
"a->b"
[a,b]
f1
fn-2
fn-1
f2
(nums[i]-1)*(nums[j]-1).
island's
flow
heights[r][c]
ocean.
oceans.
atlantic
ocean
cell's
pacific
rain,
(merge
newinterval
end]
memory2
memory1crash,
crashed
memory1
sticks.
leak
memory1crash
memory).
memory2crash],
[crashtime,
memory2crash
consumes
incremental
crashtime
memory,
crashes.
faulty
⌋
n/3
⌊
"$6"
"$23",
"100",
'$'.
discount%
"$",
preceded
"$1e5"
"$100",
minutes),
$1000,
or;
fn.
ensures
[[1,4,5],[1,7,7]]
painted).
mixj.
mix,
endi)
[4,7)
rightj)
mixed,
mixj]
rightj,
thin
segments,
[1,4)
segments[i]
painting[j]
rather
12)
mixed
{5,7}
{7}
[[1,4,12],[4,7,7]]
sake
[leftj,
{2,4,6}.
colori]
reward2[i]
reward1[i]
reward2,
reward1,
cheese,
mice
cheese.
mouse.
10111,
shown)
111
101,
110,
cannot.
(flip
flattening
sub-array.
array.flat
disappeared
unlocked.
lock:
upgrade:
lock(int
unlock:
unlock,
lockingtree(int[]
unlocks
unlocked,
user)
prevents
user),
upgrade
lockingtree
upgraded.
upgrade(int
unlock(int
locking
locks
ages,
teams.
basketball
younger
age.
conflicts.
player,
conflicts
trees)
s[k...l]
s[i...j]
away).
doctors
apples[i]
grows
days[i]
rot
eaten.
apples,
intlength
intlength,
forwards.
queries[i]th
hot
dispenser
cups.
amount[1],
cold,
dispense
warm,
amount[2]
amount[0],
strings)
words.length,
endtime[i],
profit[i].
type),
231,
"123456579".
[123,
f[i]
456,
579].
f[i
f.length
order(with
pairs),
array-form
[1,3,2,1].
1321,
cj)
array).
acquire
key;
locks.
useful
(substrings)
dna
dna,
dna.
studying
nucleotides
10-letter-long
"acgaattccg"
targetx
points:
targety)
targety
anyone
(reports_to
reports_to
managers,
(row1,col1)
newvalue)
subrectanglequeries
updatesubrectangle(int
(row2,col2).
getvalue(int
(row,col)
subrectangle
col2,
newvalue
b1,
b2,
"01"
watchedvideos[i]
watched
(increasing).
friends[i]
watchedvideos
general,
greatest.
lexographically
".".
nesting,
colums
objects.
either.
clamp
(similar
"0032"
read,
atoi
-231
myatoi(string
clamped
c/c++'s
reached.
32).
123,
(atoi)
whitespace.
intersections.
favorite_brand
item_brand
join_date
item_id
buyer
(clockwise),
presented
k-subarray
fraction.
2/1.
irreducible
camera
cameras
numsr-1
abs(numsl
numsl+1
numsr).
-x.
mouse),
'c'(cat),'m'(mouse).
mousejump,
mousejump
cat.
(cat,
catjump,
catjump
perm1
perm1[i]
perm2
perm2[i].
squareful.
squareful
avgs
2.75,
avgs[i]
k-radius
one-to-one
omit
$0.
difficulty[i]
$3.
worker[j]).
worker[j]
$1,
difficulty,
jobs.
flight.
itineraries,
"jfk".
itinerary
airline
lexical
["jfk",
"lgb"].
man
itinerary.
airports
"lga"]
tickets[i]
"jfk",
